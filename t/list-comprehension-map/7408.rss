<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>List comprehension או map</title>
    <link>https://forums.pythonic.guru/t/list-comprehension-map/7408</link>
    <description>סתם שאלה, יצא לי כבר כמה פעמים שהייתי צריך לבחור  או בmap או ב list comprehension. (ותמיד בחרתי בסוף בlist comperhension)
רציתי לשאול אם יש איזה עדיפות אולי מבחינת יעילות או כל בחינה אחרת לאחת מהם?
למשל יש לי רשימה של מספרים ואני רוצה רשימה חדשה עם כל המספרים כפול 2. אז במקום ליצור פונקציה שמקבלת מספר ומכפילה כפול 2 ואז להשתמש ב map ולהמיר לרשימה, אני תמיד עושה בסוף ככה -
new_list = [i *2 for i in iterable]  (אותו דבר עם filter בכך שמוסיף תנאי)</description>
    <language>he</language>
    <lastBuildDate>Tue, 30 Jun 2020 23:24:52 +0000</lastBuildDate>
    <category>דיבורים</category>
    <atom:link href="https://forums.pythonic.guru/t/list-comprehension-map/7408.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>List comprehension או map</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <p>שאלה טובה מאוד.<br>
הנטייה של מפתחי פייתון לדורותיהם היא לכיוון ה־list comprehension.</p>
<p>אני באופן אישי מעדיף map כש:</p>
<ol>
<li>אין תנאי שצריך לסנן לפיו (לא צריך לעטוף חלק מהביטוי ב־filter)</li>
<li>הפונקציה בחלק הראשון של ה־map אליה היא לא lambda</li>
</ol>
<p>שים לב שהתחליף ה"אמיתי" ל־map הוא לא list comprehension אלא generator expression – משום שהחל מפייתון 3 הפונקציה <code>map</code> מחזירה generator ולא רשימה.</p>
<p>לשאלה על יעילות – יש עדיפות קטנה ל־map כשמדובר בפונקציות שאינן lambda, אבל זה זניח, לא בא לביטוי בסדרי גודל ובכ"מ פחות מעניין כשאתה מתכנת בפייתון, שהיא כנראה מלכתחילה לא הכלי שתבחר בד"כ לקוד שאמור לרוץ מאוד מהר <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forums.pythonic.guru/t/list-comprehension-map/7408/3">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/list-comprehension-map/7408/3</link>
        <pubDate>Tue, 30 Jun 2020 23:24:52 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7408-3</guid>
        <source url="https://forums.pythonic.guru/t/list-comprehension-map/7408.rss">List comprehension או map</source>
      </item>
      <item>
        <title>List comprehension או map</title>
        <dc:creator><![CDATA[nitayv]]></dc:creator>
        <description><![CDATA[
            <p>סתם שאלה, יצא לי כבר כמה פעמים שהייתי צריך לבחור  או בmap או ב list comprehension. (ותמיד בחרתי בסוף בlist comperhension)<br>
רציתי לשאול אם יש איזה עדיפות אולי מבחינת יעילות או כל בחינה אחרת לאחת מהם?<br>
למשל יש לי רשימה של מספרים ואני רוצה רשימה חדשה עם כל המספרים כפול 2. אז במקום ליצור פונקציה שמקבלת מספר ומכפילה כפול 2 ואז להשתמש ב map ולהמיר לרשימה, אני תמיד עושה בסוף ככה -<br>
new_list = [i *2 for i in iterable]  (אותו דבר עם filter בכך שמוסיף תנאי)</p>
          <p><a href="https://forums.pythonic.guru/t/list-comprehension-map/7408/1">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/list-comprehension-map/7408/1</link>
        <pubDate>Tue, 30 Jun 2020 21:53:48 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7408-1</guid>
        <source url="https://forums.pythonic.guru/t/list-comprehension-map/7408.rss">List comprehension או map</source>
      </item>
  </channel>
</rss>
