<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</title>
    <link>https://forums.pythonic.guru/t/topic/7558</link>
    <description>נניח שאני מגדיר פונקציה שמקבלת שני משתנים. ואני חושש שמשני מקרים - האחד שהמשתמש לא הזין כלל משתנים, והמקרה השני הוא שהוא הזין יותר משני משתנים.
בגדול - כל פסקת  try - except שאני אשים ב*תוך הפוקנציה* לא תקלוט את החריגה, כי היא מתרחשת בקריאה עצמה אל הפונקציה. רק אם אני אעטוף את התוכנית הראשית ב try-except.
השאלה האם לא נהוג להתמודד עם כאלה חריגות, בכל כתיבת תוכנית, או שמניחים שהמשתמש יבין מתי הוא מקריס את התוכנית? וגם בשאלות ש&quot;ב האם יש להתמודד עם זה?


כי כדי להתמודד עם מקרה של יותר מידי, הפיתרון יהיה לשים כוכבית בפונקציה, להיות מוכנים לקבל כמה משתנים שאפשר, ואז בתוך הפונקציה לבדוק את הכמות. ומנגד , כדי להתמודד עם חוסר משתנים - זה יהיה לתת ערכים דיפולטיבים ולבדוק את זה. אז יש פה מין סתירה מסוימת..

אם להיות יותר ממוקד - מתי מנסים להתמודד עם שגיאות משתמש ומתי לא? פשוט עלול לא להיות לזה סוף אם מנסים להתמודד עם זה ברמת הפונקציה. העבת כמות לא מספקת זה עוד סביר, מה אם הוא מנסה להעביר משתנה שטרם הוכרז? או משהו שלא קיים כמו int(&#39;b&#39;)? ועוד ועוד..</description>
    <language>he</language>
    <lastBuildDate>Sat, 18 Jul 2020 01:18:27 +0000</lastBuildDate>
    <category>שבוע 8</category>
    <atom:link href="https://forums.pythonic.guru/t/topic/7558.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <p>תניח שאם הוא מתכנת הוא אמור לדעת לקרוא שגיאות של פייתון, אבל כן יש אזור דמדומים בין “לא מטפל בשום דבר שקשור לבעיות שעלולות לקרות בעקבות שימוש מתכנת בקוד שלי” לבין “תופס הכל”.<br>
צריך לקבל החלטות נבונות, וזה skill שיבנה ככל שתתכנת יותר <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forums.pythonic.guru/t/topic/7558/4">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/7558/4</link>
        <pubDate>Sat, 18 Jul 2020 01:18:27 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7558-4</guid>
        <source url="https://forums.pythonic.guru/t/topic/7558.rss">מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</source>
      </item>
      <item>
        <title>מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</title>
        <dc:creator><![CDATA[of313]]></dc:creator>
        <description><![CDATA[
            <p>קלעת בול למה שהתכוונתי- שימוש בפונקציה מוגדרת אבל עם משתנים שלא הוגדרו בכלל או עם מספר ארגומנטים לא מתאים לפונקציה</p>
          <p><a href="https://forums.pythonic.guru/t/topic/7558/3">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/7558/3</link>
        <pubDate>Fri, 17 Jul 2020 15:48:10 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7558-3</guid>
        <source url="https://forums.pythonic.guru/t/topic/7558.rss">מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</source>
      </item>
      <item>
        <title>מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <p>אני חושש שפספסתי משהו בסיסי בשאלה שלך. המשתמש הוא מתכנת אחר שבא להשתמש במחלקות ופונקציות שיצרת?<br>
אם כן, שימוש לא נכון בפונקציה אמור לזרוק לו שגיאה. אל תטפל בדברים שנוגעים לשימוש לא נכון שלו בקוד. <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forums.pythonic.guru/t/topic/7558/2">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/7558/2</link>
        <pubDate>Fri, 17 Jul 2020 14:33:29 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7558-2</guid>
        <source url="https://forums.pythonic.guru/t/topic/7558.rss">מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</source>
      </item>
      <item>
        <title>מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</title>
        <dc:creator><![CDATA[of313]]></dc:creator>
        <description><![CDATA[
            <p>נניח שאני מגדיר פונקציה שמקבלת שני משתנים. ואני חושש שמשני מקרים - האחד שהמשתמש לא הזין כלל משתנים, והמקרה השני הוא שהוא הזין יותר משני משתנים.<br>
בגדול - כל פסקת  try - except שאני אשים ב<em>תוך הפוקנציה</em> לא תקלוט את החריגה, כי היא מתרחשת בקריאה עצמה אל הפונקציה. רק אם אני אעטוף את התוכנית הראשית ב try-except.<br>
השאלה האם לא נהוג להתמודד עם כאלה חריגות, בכל כתיבת תוכנית, או שמניחים שהמשתמש יבין מתי הוא מקריס את התוכנית? וגם בשאלות ש"ב האם יש להתמודד עם זה?</p>
<p>כי כדי להתמודד עם מקרה של יותר מידי, הפיתרון יהיה לשים כוכבית בפונקציה, להיות מוכנים לקבל כמה משתנים שאפשר, ואז בתוך הפונקציה לבדוק את הכמות. ומנגד , כדי להתמודד עם חוסר משתנים - זה יהיה לתת ערכים דיפולטיבים ולבדוק את זה. אז יש פה מין סתירה מסוימת…</p>
<p>אם להיות יותר ממוקד - מתי מנסים להתמודד עם שגיאות משתמש ומתי לא? פשוט עלול לא להיות לזה סוף אם מנסים להתמודד עם זה ברמת הפונקציה. העבת כמות לא מספקת זה עוד סביר, מה אם הוא מנסה להעביר משתנה שטרם הוכרז? או משהו שלא קיים כמו int(‘b’)? ועוד ועוד…</p>
          <p><a href="https://forums.pythonic.guru/t/topic/7558/1">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/7558/1</link>
        <pubDate>Fri, 17 Jul 2020 08:49:05 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7558-1</guid>
        <source url="https://forums.pythonic.guru/t/topic/7558.rss">מה הגישה הכדאית להתמודד עם חריגות בקלט מהמשתמש?</source>
      </item>
  </channel>
</rss>
