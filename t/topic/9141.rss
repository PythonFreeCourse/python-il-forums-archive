<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</title>
    <link>https://forums.pythonic.guru/t/topic/9141</link>
    <description>היי!

התחלתי לכתוב את הסילבוס שיופיע ליד התעודה.
אני מפרסם את זה כאן כדי שכולכם תוכלו לתרום, אם תרצו, ולהשפיע על הטקסט שיופיע לצד התעודה שלכם. 
&lt;s&gt;כמובן שבמהלך השבוע הקרוב יתווספו פה פרטים (והשבועות החסרים)&lt;/s&gt;, אבל בנתיים תרגישו בנוח להרחיב/לתקן איך שנראה לכם.
יש לכולם הרשאות עריכה.

קורס “לומדים פייתון” הוא קורס בן 16 יחידות לימוד, שמתחיל בהיכרות עם עולם התכנות, עובר ביצירת פרויקט עם כלים וסביבה “מהעולם האמיתי” ומסתיים בכתיבת פרויקט קורסי משותף בהיקף משמעותי.

הקורס חינמי, ולכן אנחנו מרשים לעצמנו לדרוש מהחניכים רמת מחוייבות גבוהה.
במהלך הקורס, החניך לומד לעבוד ולחקור באופן עצמאי, לפתור בעיות במגוון תחומים ולהכיר את ארסנל הכלים המודרני בתחום.
מדובר במסלול דורשני שבו, במשך שנה, נדרש החניך להגיש מטלות מאתגרות, תוך עמידה בזמני הגשה שנקבעו מראש.
בקורס משולבות מטלות שעוברות Code Review של בודק ידני.

התעודה מוענקת רק לחניכים שהגישו את כל המטלות בזמן. תעודת “מצטיין” מוענקת לחניכים שהגישו את כל המטלות בזמן בסטנדרט עבודה גבוה במיוחד.


| פרק |                                                                                                          נושאים |                                                                                                                                                                                                                                                                                                                                                                                                                                                            פירוט |
| ---:| ---------------------------------------------------------------------------------------------------------------:| ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|
|   1 |                                             הקדמה, אריתמטיקה, טיפוסי נתונים, קלט ופלט, משתנים, לוגיקה בוליאנית |                                                                                                                                                                                                                                                              פרק זה מספק נחיתה רכה לעולם התכנות, ומניח את היסודות לקראת הפרקים הבאים. במסגרת הפרק החניכים לומדים להשתמש בלוגיקה בוליאנית ובאופרטורי השוואה, ומתרגלים כתיבת תוכנית בסיסית המקבלת קלט ומחזירה פלט. |
|   2 |                                                             תנאים, פונקציות, רשימות,  פעולות על מחרוזות, תיעוד |                                                                                            במסגרת הפרק החניכים נפגשים לראשונה עם היכולת להשפיע על מבנה זרימת התוכנית ועם עקרון החלוקה ליחידות קטנות שלהן אחריות יחידה. זהו השלב שבו החניכים מכירים ומשתמשים לראשונה במבנה נתונים – רשימה. בפרק זה החניך מקבל לראשונה תרגיל שמעודד אותו לחקור את התיעוד בעצמו. עידוד החניך למחקר עצמאי הולכת וגוברת ככל שהקורס מתקדם, ונהפכת בחציו השני של הקורס לערך מרכזי בעבודה. |
|   3 |                             לולאות `while`, חיתוך מחרוזות ורשימות, קבצים, פעולות על רשימות, Mutability וטאפלים |                                                     החניכים לומדים לראשונה לולאות המבוססות על ביטוי בוליאני. במהלך הפרק הם מבצעים לראשונה debugging מורכב ולא טריוויאלי. בפרק זה החניך מקבל לראשונה כלים להתמודדות עם בעיות מהעולם האמיתי (קבצים, לולאות). זה גם השלב בו הוא פוגש לראשונה מבנה נתונים Immutable־י, ולומד לראשונה על מאפיין תכנותי מורכב שדורש הבנה של התנהגות השפה מאחורי הקלעים. |
|   4 |                                           לולאות `for`, מילונים ופעולות עליהם, Unpacking, פונקציות מובנות בשפה. | בפרק זה החניכים משתמשים לראשונה בתכונת ה־iterable־יות של מבני נתונים באמצעות לולאת ה־for של פייתון. בפרק דנים על מילונים ומבני נתונים מקוננים, תוך ניסיון להקנות אינטואיציה לבחירת מבנה נתונים מתאים לכל בעיה. זה גם הפרק שבו הם משתמשים לראשונה בטכניקות שיהפכו את הקוד לקריא יותר תוך שימוש בתחביר &quot;פייתוני&quot;. בסיום הפרק, החניכים קוראים על אוטומט סופי דטרמיניסטי. כתרגיל, עליהם לכתוב תוכנית שמקבלת כקלט מצבים, כללי מעבר וקלטים, ומחזירה את המצב הסופי שאליו הגיעה בסיום ריצת האוטומט עבור כל קלט. |
|   5 | מודולים, מוסכמות סגנון, פרמטרים לפונקציות (לפי מיקום, לפי שם, `*args`, `**kwargs`, ערכי ברירת מחדל), Generators |                                                                                                                                                                  בפרק זה גובר הצורך להשתמש במקורות מידע חיצוניים כדי למצוא כלים מתוך המודולים הסטנדרטיים שפייתון מספקת. לחניכים מוצג לראשונה באופן מסודר הרעיון של מוסכמות כתיבה ו־PEP8, והם לומדים על טכניקות מתקדמות יותר של קבלת ארגומנטים בפונקציות. בחלק האחרון של הפרק החניכים לומדים על generators ועל מילת המפתח `yield`. |
|   6 |                                                 קבוצות, מבוא לתכנות פונקציונלי, מודולים חיצוניים, ניהול מודולים |                                                                                                                                                      בפרק זה החניכים לומדים על רעיונות פונקציונליים, כמו map, filter, lambda ומה משמעות המונח higher order function.  הם לומדים גם על סוגי ה־comprehensions השונים שקיימים בפייתון וכיצד להשתמש בהם. בחלק האחרון של הפרק החניכים לומדים על מציאת מודולים צד שלישי באינטרנט, זיהוי מודולים רלוונטיים והתקנה שלהם. |
|   7 |                                                                                           מחלקות, מוסכמות תיעוד |                                                                                                                      בפרק זה החניכים לומדים על מחלקות, ומכירים את קצה הקרחון של תכנות מונחה עצמים. תחילה, הם נפגשים עם הרעיון של מחלקות, מופעים, תכונות, פעולות אתחול ופונקציות מיוחדות; ולאחר מכן הם נדרשים להבין גם רעיונות כמו הכלה וכימוס. בין לבין, החניכים עוברים סקירה מעמיקה של טכניקות ומוסכמות תיעוד קוד, ומתבקשים לתרגל כתיבה של מחלקות מתועדות היטב. |
|   8 |                    ירושה, Design Patterns בסיסיות (ירושה מרובה, מחלקות מופשטות, Mixins), חריגות וטיפול  בחריגות |                        בפרק זה החניכים לומדים להכיר את הגמישות שבשימוש במחלקות. לאורך הפרק מודגשות הבעיות שעלולות לצוץ בשימוש שגוי במחלקות (תסמונת המחלקה השברירית, עקרון ההחלפה של ליסקוב, הבדלים בין הכלה לירושה). החניכים מתבקשים לשנות קוד של משחק שחמט שעושה שימוש במחלקות אבסטרקטיות וב־Mixins ובכך מתרגלים כניסה לקוד קיים, ומתנסים בשימוש בירושה ובטכניקות מתקדמות שקשורות לירושה. בהמשך הפרק, החניכים לומדים על טיפול בחריגות, על זריקת חריגות ועל יצירה שלהן, ונחשפים לדיון ולשיטות עבודה נכונות של טיפול בשגיאות. |
|   9 |                                       סביבת פיתוח, ניפוי שגיאות, פיצול קוד לקבצים, Type annotations, Decorators |                  בפרק זה החניכים עובדים לראשונה על IDE ולומדים את סביבת העבודה החדשה ויתרונותיה – כמו כלים לניפוי שגיאות, בעזרתם הם מתקנים תוכנית שבה הוכמנו טעויות מכוונות. בהמשך, החניכים לומדים על פיצול הפרויקט לקבצים ומתנסים בכך בעצמם. החניכים מתנסים גם בכתיבת קוד עם type annotations, הוספת type annotations לקוד קיים ובדיקת הקוד באמצעות mypy. לבסוף, החניכים לומדים על decorators ומחדדים את ההבנה שלהם בנוגע לתכונות הפונקציונליות של פייתון כשפה. |
|  10 | עבודה עם נתיבים, Git, GitHub | בפרק זה החניכים מתוודעים לרעיון של ניהול גרסאות. במסגרת הפרק, הם כותבים מערכת משלהם לניהול גרסאות, שכוללת פקודות כמו add, branch, commit, status ו־checkout. החניכים מממשים גם merge בסיסי ו־graph, שהוא מעין log גרפי. בהמשך הפרק החניכים לומדים כיצד להעלות את הקוד שכתב ל־GitHub בעזרת git, ולומד כיצד לנווט ב־GitHub ולמצוא פרויקטים שניתן לסמוך עליהם. 
| 11 | HTML, CSS, DevTools | בפרק זה החניכים לומדים על HTML ו־CSS ברמה בסיסית, ובסופו הם מעצבים בעצמם אתר סטטי רספונסיבי ותקני. החומרים כוללים מונחים בסיסיים, היכרות עם HTML בדגש על HTML סמנטי, כתיבת CSS רספונסיבי ועבודה מול MDN. 
| 12 | אינטרנט, סביבה וירטואלית, Wireframing, Serialization, APIs, Templating Engine, Web Frameworks, Heroku | בפרק זה לומדים כיצד לבנות אתר – מרמת ה־wireframing ועד העלאת האתר לאינטרנט. במסגרת הפרויקט החניכים כותבים קוד פייתון שעושה שימוש ב־API חיצוני, על מנת להשיג מידע שיוצג באתר שלהם. החניכים לומדים לראשונה על Flask כ־microframework ל־web applications, ובונים את התצוגה למשתמש בעזרת מנוע התבניות Jinja2. הפרק מסתיים בתהליך deploy של האתר ל־Heroku (שירות PaaS) כדי להפוך אותו לפומבי.
| 13 | מבוא למסדי נתונים רלציוניים, SQL | בפרק זה החניכים לומדים על היתרונות של שימוש במסדי נתונים. במסגרת התרגול, הם שולפים מידע ממסדי נתונים ומשתמשים בשאילתות עם מילות המפתח `SELECT`, `FROM`, `WHERE`, `JOIN`, `GROUP BY`, `HAVING`, `ORDER BY` ו־`LIMIT`. הפרק מסתיים בדיון ותרגול של נרמול נתונים במסדי נתונים רלציוניים.
| 14 | פעולות CRUD, שימוש ב־ORM, פרויקט | בפרק זה החניכים כותבים פרויקט שממחיש את הקשר בין מסדי נתונים רלציוניים ליישומי אינטרנט. החניכים מתכננים ERD שבו ישנן 3 טבלאות או יותר, כותבים שאילתות ליצירה, קריאה, עדכון ומחיקה של הישויות בטבלאות ומשתמשים ב־ORM לבחירתם (peewee או SQLAlchemy) כשכבת הפשטה לשאילתות וגישור בין מסד הנתונים לאובייקטים בקוד. 
| 15 | Regular Expressions, מבוא ליעילות אלגוריתמית, pytest | בפרק זה החניכים מעמיקים בביטויים רגולריים ולומדים להשתמש בהם, הן בפייתון והן לשימושים כלליים אחרים. החניכים לומדים להשתמש ב־pytest וכותבים בדיקות עבור &quot;משחק החיים&quot; (שכתבו בעצמם) ועבור הפרויקט שכתבו בפרק שעבר. בסיום הפרק החניכים לומדים מונחים בסיסיים ביעילות אלגוריתמית, מקבלים אינטואיציה ומחשבים זמני ריצה של תוכניות שונות. 
| 16 | פרויקט סיום | בפרק זה החניכים עובדים יחד על פרויקט, שבו כל חניך לוקח על עצמו עבודה על 3 issues – לפחות פיצ&#39;ר אחד ועד שני תיקוני באגים. במהלך העבודה החניכים לומדים על עבודה בצוות, שימוש ב־Git, פתרון קונפליקטים, קבלת CR־ים מעמיתים והשתלבות בקוד של אחרים.</description>
    <language>he</language>
    <lastBuildDate>Mon, 08 Mar 2021 18:32:40 +0000</lastBuildDate>
    <category>דיבורים</category>
    <atom:link href="https://forums.pythonic.guru/t/topic/9141.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</title>
        <dc:creator><![CDATA[sagi.zo]]></dc:creator>
        <description><![CDATA[
            <p>לדעתי בפרק 12 עבדנו לראשונה עם סביבה וירטואלית גם</p>
          <p><a href="https://forums.pythonic.guru/t/topic/9141/4">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/9141/4</link>
        <pubDate>Mon, 08 Mar 2021 18:32:40 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-9141-4</guid>
        <source url="https://forums.pythonic.guru/t/topic/9141.rss">ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</source>
      </item>
      <item>
        <title>ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</title>
        <dc:creator><![CDATA[mbdi007]]></dc:creator>
        <description><![CDATA[
            <p>הייתי מוסיף בתוך שבוע 16 עבודה בgithub על פרוייקט משותף והסתנכרנות ציוותית (pr, cr) תוך עמידה בסטנדרט כתיבה גבוה<br>
כאילו אני הרגשתי שהתובנות על עבודה בצוות שרכשנו בפרויקט האחרון היו משמעותיות</p>
          <p><a href="https://forums.pythonic.guru/t/topic/9141/3">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/9141/3</link>
        <pubDate>Mon, 08 Mar 2021 17:41:43 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-9141-3</guid>
        <source url="https://forums.pythonic.guru/t/topic/9141.rss">ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</source>
      </item>
      <item>
        <title>ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</title>
        <dc:creator><![CDATA[EliranRefaely]]></dc:creator>
        <description><![CDATA[
            <p>עבודה מול אתרי אינטרנט - HTML, CSS and SqlAlchemy</p>
          <p><a href="https://forums.pythonic.guru/t/topic/9141/2">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/9141/2</link>
        <pubDate>Fri, 05 Mar 2021 08:07:31 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-9141-2</guid>
        <source url="https://forums.pythonic.guru/t/topic/9141.rss">ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</source>
      </item>
      <item>
        <title>ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <p>היי!</p>
<p>התחלתי לכתוב את הסילבוס שיופיע ליד התעודה.<br>
אני מפרסם את זה כאן כדי שכולכם תוכלו לתרום, אם תרצו, ולהשפיע על הטקסט שיופיע לצד התעודה שלכם.<br>
<s>כמובן שבמהלך השבוע הקרוב יתווספו פה פרטים (והשבועות החסרים)</s>, אבל בנתיים תרגישו בנוח להרחיב/לתקן איך שנראה לכם.<br>
יש לכולם הרשאות עריכה.</p>
<p>קורס “לומדים פייתון” הוא קורס בן 16 יחידות לימוד, שמתחיל בהיכרות עם עולם התכנות, עובר ביצירת פרויקט עם כלים וסביבה “מהעולם האמיתי” ומסתיים בכתיבת פרויקט קורסי משותף בהיקף משמעותי.</p>
<p>הקורס חינמי, ולכן אנחנו מרשים לעצמנו לדרוש מהחניכים רמת מחוייבות גבוהה.<br>
במהלך הקורס, החניך לומד לעבוד ולחקור באופן עצמאי, לפתור בעיות במגוון תחומים ולהכיר את ארסנל הכלים המודרני בתחום.<br>
מדובר במסלול דורשני שבו, במשך שנה, נדרש החניך להגיש מטלות מאתגרות, תוך עמידה בזמני הגשה שנקבעו מראש.<br>
בקורס משולבות מטלות שעוברות Code Review של בודק ידני.</p>
<p>התעודה מוענקת רק לחניכים שהגישו את כל המטלות בזמן. תעודת “מצטיין” מוענקת לחניכים שהגישו את כל המטלות בזמן בסטנדרט עבודה גבוה במיוחד.</p>
<div class="md-table">
<table>
<thead>
<tr>
<th style="text-align:right">פרק</th>
<th style="text-align:right">נושאים</th>
<th style="text-align:right">פירוט</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:right">הקדמה, אריתמטיקה, טיפוסי נתונים, קלט ופלט, משתנים, לוגיקה בוליאנית</td>
<td style="text-align:right">פרק זה מספק נחיתה רכה לעולם התכנות, ומניח את היסודות לקראת הפרקים הבאים. במסגרת הפרק החניכים לומדים להשתמש בלוגיקה בוליאנית ובאופרטורי השוואה, ומתרגלים כתיבת תוכנית בסיסית המקבלת קלט ומחזירה פלט.</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:right">תנאים, פונקציות, רשימות,  פעולות על מחרוזות, תיעוד</td>
<td style="text-align:right">במסגרת הפרק החניכים נפגשים לראשונה עם היכולת להשפיע על מבנה זרימת התוכנית ועם עקרון החלוקה ליחידות קטנות שלהן אחריות יחידה. זהו השלב שבו החניכים מכירים ומשתמשים לראשונה במבנה נתונים – רשימה. בפרק זה החניך מקבל לראשונה תרגיל שמעודד אותו לחקור את התיעוד בעצמו. עידוד החניך למחקר עצמאי הולכת וגוברת ככל שהקורס מתקדם, ונהפכת בחציו השני של הקורס לערך מרכזי בעבודה.</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:right">לולאות <code>while</code>, חיתוך מחרוזות ורשימות, קבצים, פעולות על רשימות, Mutability וטאפלים</td>
<td style="text-align:right">החניכים לומדים לראשונה לולאות המבוססות על ביטוי בוליאני. במהלך הפרק הם מבצעים לראשונה debugging מורכב ולא טריוויאלי. בפרק זה החניך מקבל לראשונה כלים להתמודדות עם בעיות מהעולם האמיתי (קבצים, לולאות). זה גם השלב בו הוא פוגש לראשונה מבנה נתונים Immutable־י, ולומד לראשונה על מאפיין תכנותי מורכב שדורש הבנה של התנהגות השפה מאחורי הקלעים.</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:right">לולאות <code>for</code>, מילונים ופעולות עליהם, Unpacking, פונקציות מובנות בשפה.</td>
<td style="text-align:right">בפרק זה החניכים משתמשים לראשונה בתכונת ה־iterable־יות של מבני נתונים באמצעות לולאת ה־for של פייתון. בפרק דנים על מילונים ומבני נתונים מקוננים, תוך ניסיון להקנות אינטואיציה לבחירת מבנה נתונים מתאים לכל בעיה. זה גם הפרק שבו הם משתמשים לראשונה בטכניקות שיהפכו את הקוד לקריא יותר תוך שימוש בתחביר “פייתוני”. בסיום הפרק, החניכים קוראים על אוטומט סופי דטרמיניסטי. כתרגיל, עליהם לכתוב תוכנית שמקבלת כקלט מצבים, כללי מעבר וקלטים, ומחזירה את המצב הסופי שאליו הגיעה בסיום ריצת האוטומט עבור כל קלט.</td>
</tr>
<tr>
<td style="text-align:right">5</td>
<td style="text-align:right">מודולים, מוסכמות סגנון, פרמטרים לפונקציות (לפי מיקום, לפי שם, <code>*args</code>, <code>**kwargs</code>, ערכי ברירת מחדל), Generators</td>
<td style="text-align:right">בפרק זה גובר הצורך להשתמש במקורות מידע חיצוניים כדי למצוא כלים מתוך המודולים הסטנדרטיים שפייתון מספקת. לחניכים מוצג לראשונה באופן מסודר הרעיון של מוסכמות כתיבה ו־PEP8, והם לומדים על טכניקות מתקדמות יותר של קבלת ארגומנטים בפונקציות. בחלק האחרון של הפרק החניכים לומדים על generators ועל מילת המפתח <code>yield</code>.</td>
</tr>
<tr>
<td style="text-align:right">6</td>
<td style="text-align:right">קבוצות, מבוא לתכנות פונקציונלי, מודולים חיצוניים, ניהול מודולים</td>
<td style="text-align:right">בפרק זה החניכים לומדים על רעיונות פונקציונליים, כמו map, filter, lambda ומה משמעות המונח higher order function.  הם לומדים גם על סוגי ה־comprehensions השונים שקיימים בפייתון וכיצד להשתמש בהם. בחלק האחרון של הפרק החניכים לומדים על מציאת מודולים צד שלישי באינטרנט, זיהוי מודולים רלוונטיים והתקנה שלהם.</td>
</tr>
<tr>
<td style="text-align:right">7</td>
<td style="text-align:right">מחלקות, מוסכמות תיעוד</td>
<td style="text-align:right">בפרק זה החניכים לומדים על מחלקות, ומכירים את קצה הקרחון של תכנות מונחה עצמים. תחילה, הם נפגשים עם הרעיון של מחלקות, מופעים, תכונות, פעולות אתחול ופונקציות מיוחדות; ולאחר מכן הם נדרשים להבין גם רעיונות כמו הכלה וכימוס. בין לבין, החניכים עוברים סקירה מעמיקה של טכניקות ומוסכמות תיעוד קוד, ומתבקשים לתרגל כתיבה של מחלקות מתועדות היטב.</td>
</tr>
<tr>
<td style="text-align:right">8</td>
<td style="text-align:right">ירושה, Design Patterns בסיסיות (ירושה מרובה, מחלקות מופשטות, Mixins), חריגות וטיפול  בחריגות</td>
<td style="text-align:right">בפרק זה החניכים לומדים להכיר את הגמישות שבשימוש במחלקות. לאורך הפרק מודגשות הבעיות שעלולות לצוץ בשימוש שגוי במחלקות (תסמונת המחלקה השברירית, עקרון ההחלפה של ליסקוב, הבדלים בין הכלה לירושה). החניכים מתבקשים לשנות קוד של משחק שחמט שעושה שימוש במחלקות אבסטרקטיות וב־Mixins ובכך מתרגלים כניסה לקוד קיים, ומתנסים בשימוש בירושה ובטכניקות מתקדמות שקשורות לירושה. בהמשך הפרק, החניכים לומדים על טיפול בחריגות, על זריקת חריגות ועל יצירה שלהן, ונחשפים לדיון ולשיטות עבודה נכונות של טיפול בשגיאות.</td>
</tr>
<tr>
<td style="text-align:right">9</td>
<td style="text-align:right">סביבת פיתוח, ניפוי שגיאות, פיצול קוד לקבצים, Type annotations, Decorators</td>
<td style="text-align:right">בפרק זה החניכים עובדים לראשונה על IDE ולומדים את סביבת העבודה החדשה ויתרונותיה – כמו כלים לניפוי שגיאות, בעזרתם הם מתקנים תוכנית שבה הוכמנו טעויות מכוונות. בהמשך, החניכים לומדים על פיצול הפרויקט לקבצים ומתנסים בכך בעצמם. החניכים מתנסים גם בכתיבת קוד עם type annotations, הוספת type annotations לקוד קיים ובדיקת הקוד באמצעות mypy. לבסוף, החניכים לומדים על decorators ומחדדים את ההבנה שלהם בנוגע לתכונות הפונקציונליות של פייתון כשפה.</td>
</tr>
<tr>
<td style="text-align:right">10</td>
<td style="text-align:right">עבודה עם נתיבים, Git, GitHub</td>
<td style="text-align:right">בפרק זה החניכים מתוודעים לרעיון של ניהול גרסאות. במסגרת הפרק, הם כותבים מערכת משלהם לניהול גרסאות, שכוללת פקודות כמו add, branch, commit, status ו־checkout. החניכים מממשים גם merge בסיסי ו־graph, שהוא מעין log גרפי. בהמשך הפרק החניכים לומדים כיצד להעלות את הקוד שכתב ל־GitHub בעזרת git, ולומד כיצד לנווט ב־GitHub ולמצוא פרויקטים שניתן לסמוך עליהם.</td>
</tr>
<tr>
<td style="text-align:right">11</td>
<td style="text-align:right">HTML, CSS, DevTools</td>
<td style="text-align:right">בפרק זה החניכים לומדים על HTML ו־CSS ברמה בסיסית, ובסופו הם מעצבים בעצמם אתר סטטי רספונסיבי ותקני. החומרים כוללים מונחים בסיסיים, היכרות עם HTML בדגש על HTML סמנטי, כתיבת CSS רספונסיבי ועבודה מול MDN.</td>
</tr>
<tr>
<td style="text-align:right">12</td>
<td style="text-align:right">אינטרנט, סביבה וירטואלית, Wireframing, Serialization, APIs, Templating Engine, Web Frameworks, Heroku</td>
<td style="text-align:right">בפרק זה לומדים כיצד לבנות אתר – מרמת ה־wireframing ועד העלאת האתר לאינטרנט. במסגרת הפרויקט החניכים כותבים קוד פייתון שעושה שימוש ב־API חיצוני, על מנת להשיג מידע שיוצג באתר שלהם. החניכים לומדים לראשונה על Flask כ־microframework ל־web applications, ובונים את התצוגה למשתמש בעזרת מנוע התבניות Jinja2. הפרק מסתיים בתהליך deploy של האתר ל־Heroku (שירות PaaS) כדי להפוך אותו לפומבי.</td>
</tr>
<tr>
<td style="text-align:right">13</td>
<td style="text-align:right">מבוא למסדי נתונים רלציוניים, SQL</td>
<td style="text-align:right">בפרק זה החניכים לומדים על היתרונות של שימוש במסדי נתונים. במסגרת התרגול, הם שולפים מידע ממסדי נתונים ומשתמשים בשאילתות עם מילות המפתח <code>SELECT</code>, <code>FROM</code>, <code>WHERE</code>, <code>JOIN</code>, <code>GROUP BY</code>, <code>HAVING</code>, <code>ORDER BY</code> ו־<code>LIMIT</code>. הפרק מסתיים בדיון ותרגול של נרמול נתונים במסדי נתונים רלציוניים.</td>
</tr>
<tr>
<td style="text-align:right">14</td>
<td style="text-align:right">פעולות CRUD, שימוש ב־ORM, פרויקט</td>
<td style="text-align:right">בפרק זה החניכים כותבים פרויקט שממחיש את הקשר בין מסדי נתונים רלציוניים ליישומי אינטרנט. החניכים מתכננים ERD שבו ישנן 3 טבלאות או יותר, כותבים שאילתות ליצירה, קריאה, עדכון ומחיקה של הישויות בטבלאות ומשתמשים ב־ORM לבחירתם (peewee או SQLAlchemy) כשכבת הפשטה לשאילתות וגישור בין מסד הנתונים לאובייקטים בקוד.</td>
</tr>
<tr>
<td style="text-align:right">15</td>
<td style="text-align:right">Regular Expressions, מבוא ליעילות אלגוריתמית, pytest</td>
<td style="text-align:right">בפרק זה החניכים מעמיקים בביטויים רגולריים ולומדים להשתמש בהם, הן בפייתון והן לשימושים כלליים אחרים. החניכים לומדים להשתמש ב־pytest וכותבים בדיקות עבור “משחק החיים” (שכתבו בעצמם) ועבור הפרויקט שכתבו בפרק שעבר. בסיום הפרק החניכים לומדים מונחים בסיסיים ביעילות אלגוריתמית, מקבלים אינטואיציה ומחשבים זמני ריצה של תוכניות שונות.</td>
</tr>
<tr>
<td style="text-align:right">16</td>
<td style="text-align:right">פרויקט סיום</td>
<td style="text-align:right">בפרק זה החניכים עובדים יחד על פרויקט, שבו כל חניך לוקח על עצמו עבודה על 3 issues – לפחות פיצ’ר אחד ועד שני תיקוני באגים. במהלך העבודה החניכים לומדים על עבודה בצוות, שימוש ב־Git, פתרון קונפליקטים, קבלת CR־ים מעמיתים והשתלבות בקוד של אחרים.</td>
</tr>
</tbody>
</table>
</div>
          <p><a href="https://forums.pythonic.guru/t/topic/9141/1">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/9141/1</link>
        <pubDate>Fri, 05 Mar 2021 07:35:44 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-9141-1</guid>
        <source url="https://forums.pythonic.guru/t/topic/9141.rss">ויקי תעודה – השפיעו על מה יהיה כתוב ליד התעודות שלכם!</source>
      </item>
  </channel>
</rss>
