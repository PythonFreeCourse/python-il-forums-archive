<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>המרת משתנה בתחילת פונקציה</title>
    <link>https://forums.pythonic.guru/t/topic/5135</link>
    <description>היי אשמח לדעת אם זה נהוג מה שאני עושה בתחילת הפונקציה עם המשתנה number. אני מוצא את עצמי פותר ככה לא מעט תרגילים. האם יש דרך נכונה יותר?
![image|484x73](upload://iaw4OeMPdGkX1paMRqFvCvDi3GI.png)</description>
    <language>he</language>
    <lastBuildDate>Tue, 07 Sep 2021 21:55:31 +0000</lastBuildDate>
    <category>שבוע 3</category>
    <atom:link href="https://forums.pythonic.guru/t/topic/5135.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <p>תוספת למי שירצה להעמיק, על “<a href="https://en.wikipedia.org/wiki/Robustness_principle">עיקרון האיתנות</a>”.<br>
השאלה, אם אני מזקק אותה (ומקווה שהבנתי כראוי), היא אם יש צורך לוודא או לטפל בקלט שמקבלת פונקציה שאנחנו בונים.</p>
<p>עיקרון האיתנות אומר:</p>
<blockquote>
<p>היה שמרן במה שאתה שולח וליברל במה שאתה מקבל.</p>
</blockquote>
<p>אם נשאיל רגע לעולם כתיבת הפונקציות:</p>
<ol>
<li>נסה להניח על הפרמטרים שאתה מקבל כמה שפחות.</li>
<li>החזר תמיד תשובה חד משמעית, באופן שהמשתמש בפונקציה יידע בוודאות מה יוחזר כל פעם.</li>
</ol>
<p>בפייתון זה כמובן מיתרגם לבדיקות סוג וניסיון “להציל” את הקלט אם אנחנו מזהים שאפשר. זה אומר:</p>
<ol>
<li>בדיקות סוג הקלט והמרות כשצריך.</li>
<li>התחשבות במקרים של קלט שכלל לא מתאים למקרה שלנו, ואולי זריקת שגיאות (עדיין לא למדנו בשבוע 3 – אבל לומדים בהמשך).</li>
<li>החזרה של אותו סוג משתנה מהפונקציה, עד כמה שאפשר. כלומר, לא להחזיר בוליאני או מחרוזת או מספר: או שהפונקציה מחזירה מחרוזת, או שהיא מחזירה מספר, או שמחזירה בוליאני.</li>
</ol>
<p>**</p>
<p>תת־הרחבה מעניינת היא הביקורת על הרעיון הזה.<br>
להיות ליברל מדי בקלט עלול לכבול אותך בעתיד, כשיעלה הצורך להפסיק לתמוך בדברים.</p>
<p>הנה דוגמה מעט טפשית, שאני מקווה שתעביר את הוייב:<br>
נניח שאתה מתכנת תוכנת מיילים.<br>
החלטת להיות ליברל, ואתה תומך באנשים שטעו והזינו את כתובת המייל בעברית (במקום <a href="mailto:yam@gmail.com">yam@gmail.com</a>, הם על עברית במקלדת ומקלידים <code>טשצ@עצשןךץבםצ</code>).<br>
הארכיטקטורה של התוכנה מסתבכת, והחלטת שהוספת פיצ’רים לשורת הכתובות מתארכת משמעותית בגלל שהליברליות הזו מסבכת לך את הקוד.<br>
אבל עכשיו כבר מאוחר מדי להוריד אותו – אנשים כבר רגילים להקליד כתובות מייל באנגלית־עברית, ואולי אפילו מישהו הכניס לאיזה תקן שתוכנות מיילים צריכות לתמוך בטעות שכזו.</p>
<p>זו כמובן דוגמה מופשטת מאוד, אבל <a href="https://datatracker.ietf.org/doc/html/draft-iab-protocol-maintenance">הביקורת קיימת</a> ומייחסת לעיקרון יתרונות בעיקר לטווח הקצר ותוצאה שלילית לאורך זמן.</p>
<p>**</p>
<p>כסיפא אתן את ה־2 סנט שלי, והוא:</p>
<ol>
<li>להתאים את עצמך לפרויקט שבו אתה נמצא.</li>
<li>בפרויקט שהוא שלך – להחליט על הדרך שמתאימה לך אחרי שהתייעצת עם אנשים בעלי ניסיון.</li>
<li>בכל מקרה: לכתוב טסטים מקיפים (נלמד בשבועות הבאים) שיבדקו שהכל עובד כמצופה.</li>
</ol>
<hr>
<p>(כהערת צד: מצטער על הקפצת האשכול, יודע שעברה שנה. אני עובר ומוסיף תגיות לאשכולות בפורומים כדי שיהיה קל יותר למצוא דברים, ועל הדרך אני מרחיב שאלות מעניינות).</p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/7">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/7</link>
        <pubDate>Tue, 07 Sep 2021 13:17:25 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-7</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <p>זו שאלת העמקה טובה, וכרגיל אני מאוד שמח לקבל שאלות העמקה טובות <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>השאלה הזו מתקשרת להרבה תחומים במדעי המחשב, אבל אנסה לסכם בקצרה הרבה מאוד נושאים. אם תרצו הרחבה על משהו תרגישו בנוח לבקש.<br>
מכיוון שבפייתון, כפי שציינה אורפז, הטיפוסיות (typing) לא נבדקת ע"י פייתון בשום שלב לפני שהשורה מתבצעת בפועל, יש לנו הרבה גמישות אבל ליד זה יש לנו הרבה סיכוי לצרות.</p>
<p>יש לנו 3 אפשרויות לגשת לבעיה כזו:</p>
<ol>
<li>לבדוק את הקלט מחוץ לפונקציה</li>
<li>לבדוק את הקלט בתוך הפונקציה</li>
<li>להתעלם מהבדיקה של הקלט</li>
</ol>
<p>בזמן ש־1 ו־2 הם הפופולריים יותר, בכל שפה ובכל ארגון הגישה היא קצת שונה. בשפות עם <a href="https://he.wikipedia.org/wiki/%D7%9E%D7%A2%D7%A8%D7%9B%D7%AA_%D7%98%D7%99%D7%A4%D7%95%D7%A1%D7%99%D7%9D#%D7%97%D7%95%D7%96%D7%A7">טיפוסיות חלשה</a> (כאלו שבהן השפה “מוותרת” לנו ומאפשרת לבצע פעולות כמו <code>1 + "1"</code>) הדבר הזה הוא מקור לכאוס והמון באגים.</p>
<p>ברגע שאנחנו בודקים האם הקלט נכון, יש לנו כמה אפשרויות:</p>
<ol>
<li>לתקן אותו אם אפשר</li>
<li>להכשיל את הקריאה באופן רך (אם התוצאה של הפונקציה לא קריטית לריצת התוכנית)</li>
<li>להכשיל באופן קשה ופוטנציאלית לגרום לקריסת התוכנית</li>
</ol>
<p>כאן, כמובן, הבחירה הנכונה משתנה בין מקרה למקרה.</p>
<p>יש גישה תכנותית שנקראת “<em>Defensive Programming</em>” – סוג של גישת <a href="https://en.wikipedia.org/wiki/Fail-fast">Fail fast</a> בקוד – עדיף לתפוס את הכישלון כמה שיותר מוקדם ולשלוט במה שקורה, מאשר לתפוס את הכשלון שזה כבר מאוחר מדי. ב־Defensive Programming אנחנו נשים “Guard statements”, שהן בגדול פעולות שמטרתן לבדוק שהארגומנטים שהועברו לפרמטרים הם מה שאנחנו מצפים שהם יהיו וימנעו כישלון של הקוד בהמשך.</p>
<p>הגישה הנפוצה (והנכונה להערכתי) היא כן לשים את ה־Guard statements בתוך הפונקציה, כדי למנוע חזרה ופיזור שלהם בהרבה מקומות בקוד.</p>
<p>לקריאה נוספת: <a href="https://he.wikipedia.org/wiki/%D7%97%D7%95%D7%96%D7%94_(%D7%AA%D7%9B%D7%A0%D7%95%D7%AA),">תכנות לפי חוזה</a>, <a href="https://en.wikipedia.org/wiki/Defensive_programming">תכנון מתגונן (אנ’)</a>, <a href="https://he.wikipedia.org/wiki/%D7%9E%D7%A2%D7%A8%D7%9B%D7%AA_%D7%98%D7%99%D7%A4%D7%95%D7%A1%D7%99%D7%9D#%D7%98%D7%99%D7%A4%D7%95%D7%A1%D7%99%D7%95%D7%AA_%D7%91%D7%A8%D7%95%D7%95%D7%96">טיפוסיות ברווז</a>.</p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/6">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/6</link>
        <pubDate>Tue, 21 Apr 2020 10:17:20 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-6</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[aviadamar]]></dc:creator>
        <description><![CDATA[
            <p>אני אישית חושב שזה תלוי במה התכנית שלך עושה.<br>
אם אתה משתמש בו בחוץ בעוד מקומות בצורה של מחרוזת ורק בפונקציה הזו בצורה של מספר<br>
אז אולי כן נכון להמיר את זה בפונקציה או לחילופים בקריאה לפונקציה.</p>
<p>אם זה משתנה שקלטת אותו בסטרינג, אבל אתה כל התוכנית משתמש בו רק בצורה של int<br>
אולי שווה כבר לאחר הקליטה שלו להמיר אותו ואז להשתמש בו איפה שאתה צריך.</p>
<p>מעניין אם יש לזה פרקטיקה מקצועית, לדעתי זה תלוי תכנית אבל אני לא מהתחום וזו רק תחושה אישית ממה שעשינו עד כה.</p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/5">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/5</link>
        <pubDate>Tue, 21 Apr 2020 07:54:17 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-5</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[orpazf]]></dc:creator>
        <description><![CDATA[
            <p>כשמקבלים קלט מהמשתמש זה אכן יותר בעייתי, אבל באותה מידה ניתן לומר שאי אפשר להבטיח שנקבל מהמשתמש קלט שניתן להמיר למספר שלם - דבר שאני רואה שלא בדקת לפני ההמרה <img src="https://forums.pythonic.guru/images/emoji/twitter/slightly_smiling_face.png?v=9" title=":slightly_smiling_face:" class="emoji" alt=":slightly_smiling_face:"><br>
בכל מקרה ניתן להתמודד עם זה ולהבטיח שהקלט מהסוג הרצוי. אבל בהנחה שזו פונקציה שמסייעת לפונקציה אחרת, מה שקורה הרבה בתרגילים בינתיים, השליטה כן בידינו <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
וסתם לידע כללי, בשפות אחרות, למשל ג’אווה ו-C, טיפוס הארגומנטים שפונקציה יכולה לקבל מוגדר מראש בעת כתיבת הפונקציה</p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/4">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/4</link>
        <pubDate>Tue, 21 Apr 2020 07:25:02 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-4</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[hushay12]]></dc:creator>
        <description><![CDATA[
            <p>להבנתי כן יש סיבה. כמכניסים לי פלט שאני לא שולט בו אני לא יכול לדעת מאיזה סוג הוא יהיה. אני יכול לכפות על המשתמש, אבל עוד לא למדנו איך. אז חיפשתי דרך לוודא זאת.<br>
אהבתי את הפתרון של הקאסטינג בקריאה. אשתמש בזה מעכשיו, תודה</p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/3">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/3</link>
        <pubDate>Tue, 21 Apr 2020 07:18:12 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-3</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[orpazf]]></dc:creator>
        <description><![CDATA[
            <p>אם פונקציה אמורה לעבוד על מספר, אין שום סיבה לא לקבל את הארגומנט כשהוא כבר מספר - ולבצע את ההמרה הזו בעת הקריאה לפונקציה.</p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/2">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/2</link>
        <pubDate>Tue, 21 Apr 2020 07:02:32 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-2</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
      <item>
        <title>המרת משתנה בתחילת פונקציה</title>
        <dc:creator><![CDATA[hushay12]]></dc:creator>
        <description><![CDATA[
            <p>היי אשמח לדעת אם זה נהוג מה שאני עושה בתחילת הפונקציה עם המשתנה number. אני מוצא את עצמי פותר ככה לא מעט תרגילים. האם יש דרך נכונה יותר?<br>
<img src="https://forums.pythonic.guru/uploads/default/original/2X/7/7f577c877d9588bcc42cf1d64c26edac7424d264.png" alt="image" data-base62-sha1="iaw4OeMPdGkX1paMRqFvCvDi3GI" width="484" height="73"></p>
          <p><a href="https://forums.pythonic.guru/t/topic/5135/1">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/topic/5135/1</link>
        <pubDate>Tue, 21 Apr 2020 05:39:30 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-5135-1</guid>
        <source url="https://forums.pythonic.guru/t/topic/5135.rss">המרת משתנה בתחילת פונקציה</source>
      </item>
  </channel>
</rss>
