<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>מינימליזם בקוד של מתודת הקסם: __init__</title>
    <link>https://forums.pythonic.guru/t/init/7215</link>
    <description>רקע:
-
-שמתי לב, שאם המתודה: __ init __ היא נקייה וברורה - אז בתכלס **יכולה** לשמש כמו אחלה של אינטרודקציה למחלקה: כלומר: אם קריאה וקולעת מתכנת שמיומן בקריאת קוד בפייתון יכול להציץ בה, וישר לקבל אינפורמציה: גם משמו התכונות של המופעים שהמחלקה עוסקת פה, וגם מהגדרת התכונות - שנותנת מושג מה התכונות הללו מייצגות.

וזה מעלה לי כמה תהיות לגבי כתיבת הקוד של המתודה: __ init __, וגם לגבי תיעוד:

שאלות
-

1) האם תיעוד זה משהו שמקובל לקרוא על ההתחלה? - או שזה יותר בגדר: &quot;Cheat Sheet&quot;, כדי לקבל עזרה, או חידודים? כמה זה שכיח, שמתכנת פשוט עובר על המחלקה - כדי לקבל את המושג הראשוני שלו?

2) אם סקירה של __init__ כ-&quot;צלילה&quot; למחלקה היא דבר שבשגרה - האם נובע מכך שכדאי שהקוד של המחלקה יהיה כמה שיותר מסודר?

3) אם כן - איך אפשר לשמור על הסדר הזה, כשאנחנו רוצים לעבוד עם תכונות, שההגדרה שלהן מורכבת? (למשל: תנאים - כמו ב-&#39;חללר&#39;, שם זה לוקח כמה שורות) - מהן הגישות המקובלות לשם כך? הגדרת המאפיין באמצעות קריאה לפונקציה? (שם ייכתבו כל התנאים). אולי לבחוור שלא להגדיר מאפיינים מורכבים מלכתחילה, ולהשאיר את הביטויים שההגדרה שלהם מורכבת למתודות?</description>
    <language>he</language>
    <lastBuildDate>Sat, 20 Jun 2020 17:47:47 +0000</lastBuildDate>
    <category>שבוע 7</category>
    <atom:link href="https://forums.pythonic.guru/t/init/7215.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>מינימליזם בקוד של מתודת הקסם: __init__</title>
        <dc:creator><![CDATA[Yam]]></dc:creator>
        <description><![CDATA[
            <ol>
<li>בד"כ כשבאים להתעסק בחבילות חיצוניות אף אחד לא מזנק לקריאת הקוד. זה לא פרקטי, וככל שהחבילה גדולה יותר זה גם יהיה יותר קשה ויהיו יותר דברים מאתגרים – יש חבילות שכוללות בתוכן מאות מחלקות. תיעוד מכיל הרבה פעמים לא רק את תיעוד המחלקות עצמן, אלא קובצי תיעוד נוספים שנותנים מאיפה להתחיל בכלל. לדוגמה, בחבילה pandas אתה תמצא את <a href="https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html">10 minutes to pandas</a>, ובחבילה requests את <a href="https://requests.readthedocs.io/en/master/user/quickstart/">Quickstart</a>.</li>
<li>אתה רוצה שהקוד של המחלקה בכ"מ יהיה כמה שיותר מסודר, בשביל עצמך ובשביל מתכנתים שיגיעו לקוד בעתיד לקריאה/להרחבה.</li>
<li>כדי לשמור על ניקיון ב־<code>__init__</code> מומלץ להוציא בלוקים מורכבים לפונקציות מוגנות ולבצע שם את הלוגיקה. בשבוע הבא נלמד על עוד כלי מעניין.</li>
</ol>
          <p><a href="https://forums.pythonic.guru/t/init/7215/2">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/init/7215/2</link>
        <pubDate>Sat, 20 Jun 2020 17:47:47 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7215-2</guid>
        <source url="https://forums.pythonic.guru/t/init/7215.rss">מינימליזם בקוד של מתודת הקסם: __init__</source>
      </item>
      <item>
        <title>מינימליזם בקוד של מתודת הקסם: __init__</title>
        <dc:creator><![CDATA[DissonantHarmony]]></dc:creator>
        <description><![CDATA[
            <h2>
<a name="h-1" class="anchor" href="https://forums.pythonic.guru#h-1"></a>רקע:</h2>
<p>-שמתי לב, שאם המתודה: __ init __ היא נקייה וברורה - אז בתכלס <strong>יכולה</strong> לשמש כמו אחלה של אינטרודקציה למחלקה: כלומר: אם קריאה וקולעת מתכנת שמיומן בקריאת קוד בפייתון יכול להציץ בה, וישר לקבל אינפורמציה: גם משמו התכונות של המופעים שהמחלקה עוסקת פה, וגם מהגדרת התכונות - שנותנת מושג מה התכונות הללו מייצגות.</p>
<p>וזה מעלה לי כמה תהיות לגבי כתיבת הקוד של המתודה: __ init __, וגם לגבי תיעוד:</p>
<h2>
<a name="h-2" class="anchor" href="https://forums.pythonic.guru#h-2"></a>שאלות</h2>
<ol>
<li>
<p>האם תיעוד זה משהו שמקובל לקרוא על ההתחלה? - או שזה יותר בגדר: “Cheat Sheet”, כדי לקבל עזרה, או חידודים? כמה זה שכיח, שמתכנת פשוט עובר על המחלקה - כדי לקבל את המושג הראשוני שלו?</p>
</li>
<li>
<p>אם סקירה של <strong>init</strong> כ-“צלילה” למחלקה היא דבר שבשגרה - האם נובע מכך שכדאי שהקוד של המחלקה יהיה כמה שיותר מסודר?</p>
</li>
<li>
<p>אם כן - איך אפשר לשמור על הסדר הזה, כשאנחנו רוצים לעבוד עם תכונות, שההגדרה שלהן מורכבת? (למשל: תנאים - כמו ב-‘חללר’, שם זה לוקח כמה שורות) - מהן הגישות המקובלות לשם כך? הגדרת המאפיין באמצעות קריאה לפונקציה? (שם ייכתבו כל התנאים). אולי לבחוור שלא להגדיר מאפיינים מורכבים מלכתחילה, ולהשאיר את הביטויים שההגדרה שלהם מורכבת למתודות?</p>
</li>
</ol>
          <p><a href="https://forums.pythonic.guru/t/init/7215/1">קריאת הנושא במלואו</a></p>
        ]]></description>
        <link>https://forums.pythonic.guru/t/init/7215/1</link>
        <pubDate>Sat, 20 Jun 2020 10:00:23 +0000</pubDate>
        <guid isPermaLink="false">forums.pythonic.guru-post-7215-1</guid>
        <source url="https://forums.pythonic.guru/t/init/7215.rss">מינימליזם בקוד של מתודת הקסם: __init__</source>
      </item>
  </channel>
</rss>
