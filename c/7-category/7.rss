<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>אשכולות הנהלה - פייתון בעברית ובחינם</title>
    <link>https://forums.pythonic.guru/c/7-category/7</link>
    <description>נושאים בקטגוריה ‚אשכולות הנהלה’ בקטגוריה זו יופיעו אשכולות שפורסמו ע&quot;י ההנהלה.</description>
    <language>he</language>
      <lastBuildDate>Mon, 08 Mar 2021 11:54:37 +0000</lastBuildDate>
      <atom:link href="https://forums.pythonic.guru/c/7-category/7.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>סיום הקורס: AMA</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>כאמור, ביום הפאי אעלה לשידור ותתבצע חלוקת התעודות <img src="https://forums.pythonic.guru/images/emoji/twitter/partying_face.png?v=9" title=":partying_face:" class="emoji" alt=":partying_face:"> <img src="https://forums.pythonic.guru/images/emoji/twitter/confetti_ball.png?v=9" title=":confetti_ball:" class="emoji" alt=":confetti_ball:"></p>
<p>זה הזמן שלכם לשאול אותי כל דבר שיעלה על דעתכם – על הקורס, על דרככם בהמשך או עליי.<br>
אשתדל להתייחס לכל שאלה שתעלה פה במלוא הרצינות.</p>
<p>כדאי להעלות את השאלות פה ולא במהלך הלייב כדי שאוכל להתכונן ולספק לכם תשובה מעמיקה.</p>
            <p><small>11 פוסטים - 10 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/ama/9145">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/ama/9145</link>
          <pubDate>Mon, 08 Mar 2021 11:54:37 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-9145</guid>
          <source url="https://forums.pythonic.guru/t/ama/9145.rss">סיום הקורס: AMA</source>
        </item>
        <item>
          <title>סיום הקורס – עניינים טכניים אחרונים</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h2>מה עוד צריך לעשות כדי לקבל תעודה?</h2>
<h3>למלא את טופס הבקשה לתעודה (פעם אחת מספיקה)</h3>
<p><a href="https://forms.gle/6eWrerV9rKFaeoaC7">כאן</a>.</p>
<h3>להגיש את ה־PR־ים שלכם</h3>
<p>איך?</p>
<ol>
<li>נכנסים לתרגיל הרלוונטי במערכת התרגילים (היחיד שפתוח כרגע)</li>
<li>מוצאים את 3 ה־PR שלכם <a href="https://github.com/PythonFreeCourse/calendar/pulls?q=is%3Apr+is%3Aclosed">כאן</a>.</li>
<li>מוצאים את 3 ה־ticket שפתחתם כהצעה <a href="https://forums.pythonic.guru/c/week-16/ticket-ideas/29">כאן</a>.</li>
<li>מעלים 6 קישורים: 3 ל־PR ו־3 לטיקטים הרלוונטיים.</li>
</ol>
<h3>להמתין</h3>
<p>התעודות יחולקו ביום הפאי הבינלאומי.</p>
<h2>אני לקראת סיום עם הטיקטים.</h2>
<h3>איך מפחיתים את כמות ה־ping pong ה־CR?</h3>
<ol>
<li>מוודאים שאין בעיות פורמטינג – אפשר לעשות את זה עם precommit hooks ולבדוק שה־import־ים מסודרים לפי ה־ABC.</li>
<li>מוודאים שיש טסט לכל דבר, ולא הורדנו את אחוז ה־coverage של הפרויקט. זה קל מאוד כי יש בוט שמגיב ואומר את זה.</li>
<li>נותנים לחברים לבדוק ולתת פידבק.</li>
</ol>
<h3>מה לא ייבדק?</h3>
<ol>
<li>דברים בלי טסטים.</li>
<li>דברים שלא עוברים טסטים.</li>
<li>דברים שלא תיקנו הערות שנתתי ולא הגיבו עליהם/סגרו אותם בלי להתייחס אליהם.</li>
</ol>
<h3>אפשר כבר למלא את טופס הבקשה לתעודה?</h3>
<p>כן.</p>
<h2>האם יש המשך?</h2>
<p>כן. אעלה לשיחת זום עם כל מסיימי הקורס שיחפצו בכך להענקת התעודות ולטיפים להמשך.<br>
תאריך הזום יעלה בהמשך.<br>
מי שצריך או מעוניין בליווי פרטני מוזמן להתייעץ איתי בה"פ.<br>
לא יכול להבטיח שיהיה לי זמן לכולם – אבל אשתדל לתת לכל אחד יחס אישי <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
            <p><small>6 פוסטים - 5 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/9134">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/9134</link>
          <pubDate>Thu, 25 Feb 2021 14:26:05 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-9134</guid>
          <source url="https://forums.pythonic.guru/t/topic/9134.rss">סיום הקורס – עניינים טכניים אחרונים</source>
        </item>
        <item>
          <title>הגשת מועמדות לתעודה, דחיית מועד ההגשה האחרון</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>שימו לב בבקשה לשתי ההודעות הבאות:</p>
<h3>מועד ההגשה האחרון נדחה בשבועיים ויהיה 2021-02-24.</h3>
<p>עם יד על הלב, אני לא סופר מרוצה מההחלטה הזו כי אני מאמין שהיה הרבה זמן לתכנן ולעבוד על דברים.<br>
אני עושה את זה משום שחשוב לי שאנשים לא יפלו בישורת האחרונה.</p>
<p>תאריכי הדדליין עודכנו בצורה הבאה:<br>
התאריך 2021-02-04 הוא התאריך האחרון שבו ניתן להגיש הצעה לטיקטים חדשים.<br>
התאריך 2021-02-09 הוא התאריך האחרון שבו יאושרו רעיונות חדשים.<br>
התאריך 2021-02-16 הוא התאריך האחרון שבו יתקבלו PR־ים חדשים.<br>
התאריך 2021-02-24 הוא התאריך האחרון שבו PR שאושר יחשב במניין ה־3 PR־ים שאתם צריכים לבצע.</p>
<p>השתדלו להגיש את הקוד שלכם לבדיקה כמה שיותר מוקדם ולהיפטר מהעניין הזה כבר <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
ממוצע הזמן עד שטיקט ממורג’ג’ לתוך המערכת הוא כשבוע.</p>
<p><em>אני כבר אומר: לא תהיה דחייה נוספת ולא אוכל להתחשב או להתגמש עם אלו שאיחרו בקצת את מועד ההגשה החדש</em>.</p>
<h3>הגשת מועמדות לתעודה</h3>
<p>הגעתם עד כאן? ברכות!<br>
אם:</p>
<ol>
<li>פתרתם והגשתם את כל התרגילים בזמן, עם שימוש בעד שלושה תרגילי השלמה.</li>
<li>כל פתרונותיכם נכתבו על ידכם, ולאחר בדיקה מדוקדקת יתבצע יעלה שהפתרונות שהגשתם הם שלכם בלבד.</li>
</ol>
<p>נראה שאתם זכאים לתעודת הסיום של הקורס.<br>
מלאו בבקשה את הפרטים שלכם כאן כדי שנוכל להנפיק עבורכם תעודת סיום:</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://forums.pythonic.guru/uploads/default/original/2X/0/06d3c049148773a4e9b899cd2ad74266f13a8649.png" class="site-icon" width="16" height="16">
      <a href="https://forms.gle/6eWrerV9rKFaeoaC7" target="_blank" rel="noopener">Google Docs</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="https://forums.pythonic.guru/uploads/default/optimized/2X/8/8d0c5ef95fc07b43f2085a7943f7b96605442357_2_690x362.png" class="thumbnail" width="690" height="362" srcset="https://forums.pythonic.guru/uploads/default/optimized/2X/8/8d0c5ef95fc07b43f2085a7943f7b96605442357_2_690x362.png, https://forums.pythonic.guru/uploads/default/optimized/2X/8/8d0c5ef95fc07b43f2085a7943f7b96605442357_2_1035x543.png 1.5x, https://forums.pythonic.guru/uploads/default/original/2X/8/8d0c5ef95fc07b43f2085a7943f7b96605442357.png 2x" data-small-upload="https://forums.pythonic.guru/uploads/default/optimized/2X/8/8d0c5ef95fc07b43f2085a7943f7b96605442357_2_10x10.png"></div>

<h3><a href="https://forms.gle/6eWrerV9rKFaeoaC7" target="_blank" rel="noopener">תעודת סיום לקורס פייתון</a></h3>

<p>תנאי זכות:
1. פתרתם והגשתם את כל התרגילים בזמן, עם שימוש בעד שלושה תרגילי השלמה.
2. כל פתרונותיכם נכתבו על ידכם, ולאחר בדיקה מדוקדקת יתבצע יעלה שהפתרונות שהגשתם הם שלכם בלבד.

השם שמופיע במערכת התרגילים הוא השם שעבורו תונפק התעודה.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>בהצלחה <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
            <p><small>9 פוסטים - 6 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8932">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8932</link>
          <pubDate>Thu, 28 Jan 2021 17:40:23 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8932</guid>
          <source url="https://forums.pythonic.guru/t/topic/8932.rss">הגשת מועמדות לתעודה, דחיית מועד ההגשה האחרון</source>
        </item>
        <item>
          <title>(חשוב!) על Code Review ועל Peer Review</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>היי,</p>
<p>אז חלקכם כבר הספקתם לשלוח קוד ל־Code Review (בקיצור: CR), ואתם רואים שזה תהליך ארוך ולא פשוט.<br>
יש כמה דברים שחשוב לי שתקראו כדי לפשט לכולנו את התהליך.</p>
<h3>טכני:</h3>
<ol>
<li>כשטיפלתם בהערה שנתתי – אם סיימתם לטפל, <strong>לחצו על Resolve Issues</strong>. אם לא (נניח – לא הבנתם מה אני רוצה מחייכם), כתבו תגובה. בצורה הזו אני אדע לחזור לקוד שלכם ולבדוק אותו שוב.</li>
<li>קוד יכול לעבור גם <strong>10 או 20 פעמים CR</strong>. זה לאו דווקא בגללכם – לפעמים אני בודק בזריזות ומוצא מספיק הערות לפעם הראשונה, לפעמים אני מפספס דברים, לפעמים באמת הוספתם קוד שיכול לעבור שיפור.</li>
</ol>
<h3>כתיבת Code Review לחברים</h3>
<ol>
<li>
<strong>הֱיוּ נחמדים</strong> – זה סופר חשוב, באמת, לא סתם זו הנקודה הראשונה. <strong>לקבל CR זו פוזיציה לא נעימה שבה מבקרים יצירת אומנות שכתבת</strong>, ולרוב המתכנתים זה נוגע בנקודות רגישות.  זכרו שאנשים משקיעים הרבה זמן בלכתוב את הקוד שהם מעלים. תנו פידבקים טובים מדי פעם, תעריכו את העבודה של העמיתים שלכם. <strong>לא חייבים להיות ביזנס וקרים</strong>, יש פה יחסים קולגיאליים וגם בעבודה “בעולם האמיתי” צריך לדעת איך לתת ביקורת.</li>
<li>
<strong>תעשו CR־ים לחברים שלכם</strong> – זה גם מעשיר את פרופיל הגיטהאב שלכם, גם יוצר קשרי עבודה וגם דרך ממש נהדרת ללמוד טריקים חדשים. לא אחת למדתי דברים חדשים בפייתון מלבדוק לכם תרגילים, וזה מעשיר מאוד לדעת להיכנס לקוד של אחרים ולתת ביקורת בונה. אני יודע שזה יחלוף ל־80% מכם מעל הראש, אבל בשלב הזה זו באמת אחת הדרכים הטובות ביותר עבורכם להשתפר, לא סתם הכנסתי את זה כשלב הכרחי השבוע.</li>
<li>
<strong>אם אתם רוצים להשתפר במתן CR</strong>, קראו בבקשה את <a href="https://google.github.io/eng-practices/">המדריך של גוגל בנושא</a>, ואת <a href="https://stackoverflow.blog/2019/09/30/how-to-make-good-code-reviews-better/">המאמר הקצר בבלוג של Stackoverflow</a>.</li>
</ol>
<h4>צ’קליסט לנותן ה־CR</h4>
<p><span class="chcklst-box fa fa-square-o fa-fw"></span> הדברים שכתבת נכתבו ברוח טובה וחברית.<br>
<span class="chcklst-box fa fa-square-o fa-fw"></span> הסברתם את עצמכם כראוי באופן שהמתכנת יוכל להבין בקלות מה הבעיה בקוד שלו.<br>
<span class="chcklst-box fa fa-square-o fa-fw"></span> חיפשתם בקוד כמה שיותר מהבעיות הבאות: שמות משתנים בעייתיים, ארכיטקטורה, יעילות, כמה קשה לעקוב אחרי הקוד, שימושיות, אחידות עם שאר הפרויקט, תיעוד, טסטים, דברים שמורידים את איכות הקוד במערכת.</p>
<h3>קבלת Code Review</h3>
<ol>
<li>
<strong>קחו דברים ברוח טובה</strong>. עבור אנשים מסוימים זה לא נעים לקבל דבר שעשוי להתפרש כביקורת מחברים שנמצאים יחד איתכם בקורס – אבל ככה זה גם בעבודה ובמדעים בכלל. Peer Reviews זה דבר חשוב שצריך לקחת כהזדמנות לשיפור עצמי. זו לא ביקורת אישית עליכם. למעשה, חלק מהאנשים שכתבו לכם את ה־CR לא יודעים מי עומד מאחורי ה־PR. למרות שזה קשה, נסו להפריד את היצר הרגשי ולקחת את הביקורת באופן ענייני. אם אתם קולטים שאתם עומדים לחטוא ב־<a href="https://google.github.io/eng-practices/review/reviewer/pushback.html">pushback</a>, עצרו לכמה דקות לחשוב אם ניתחתם את ההערה לעומק והאם אולי בכל זאת יש לה מקום.</li>
<li>
<strong>נסו לשלוח ל־CR קטעי קוד קטנים</strong>. גם אם לא סיימתם את הפיצ’ר, שלחו ל־CR. הקדימו את הודעת ה־commit במילה: <code>WIP:</code> (זה אומר Work In Progress). זה יבטיח שלא נמרג’ג’ את השינויים שלכם, ושנדע שמדובר בקומיט לא שלם. זה יאפשר לנו לעבור על הקוד שלכם תוך כדי ולמזער את הזמן הכולל שעובר עד שהקוד ימורג’ג’.</li>
</ol>
            <p><small>4 פוסטים - 2 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/code-review-peer-review/8862">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/code-review-peer-review/8862</link>
          <pubDate>Wed, 20 Jan 2021 07:10:07 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8862</guid>
          <source url="https://forums.pythonic.guru/t/code-review-peer-review/8862.rss">(חשוב!) על Code Review ועל Peer Review</source>
        </item>
        <item>
          <title>שבוע 16: אז... מה עכשיו?</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h3>המטרות של השבוע הזה:</h3>
<ol>
<li>ללמד עבודה עם כלים של החיים האמיתיים.</li>
<li>ליצור גיבוש אחרון של הקהילה שסיימה את הקורס.</li>
<li>לתת לכם פוש קטנטון נוסף לתיק העבודות.</li>
<li>להשתמש בכל מה שלמדנו עד עכשיו.</li>
<li>ליצור כולנו משהו, ביחד.</li>
</ol>
<h3>מה עושים?</h3>
<p>בונים ביחד אפליקציה (אתר) ללוח שנה – כשהרעיונות באים מכם.<br>
אני בטוח שיחד נוכל לבנות משהו גדול, מגניב, חינמי ו־Open Source־י.<br>
הפרויקט שנבנה יופץ תחת רישיון Apache2 (שימוש חופשי לכל מי שרוצה, בלי תנאים), ויפורסם ב־GitHub.<br>
התרומות יהיו דרך Pull Requests שיעשו ל־GitHub של הפרויקט.</p>
<h3>איפה הקוד של הפרויקט?</h3>
<p><a href="https://github.com/PythonFreeCourse/calendar">כאן</a>.</p>
<h3>באילו טכנולוגיות נבנה את הפרויקט?</h3>
<p>כאמור, אנחנו בונים את הפרויקט ביחד.<br>
אני הולך להיות ה־CTO של הפרויקט לצורך העניין – אקבל את ההחלטות הטכנולוגיות אחרי התייעצות עם כולכם.<br>
אני אשתדל לתרום גם קוד איפה שיהיה צורך.</p>
<ol>
<li>שפת התכנות המרכזית תהיה Python, כמובן. יהיה גם HTML/CSS/JS – מקווה שיהיו עוד אנשים חוץ ממני שיתנדבו לכתוב (זה בסדר ללמוד תוך כדי) כדי שלא כל העומס יפול עליי.</li>
<li>ה־Framework הפיתוחי שנשתמש בו לצורך יצירת האתר הוא Fast API. זה framework שמאוד דומה ל־Flask והוא יחסית חם בשוק. יהיה מעניין (גם עבורי) לבחון אותו.</li>
<li>אנחנו נשתמש במסד נתונים רלציוני. בשרת הוא יהיה PostgreSQL, ובסביבה הלוקאלית שלכם הוא יהיה SQLite. זה יאפשר לנו להקים את הסביבה הלוקאלית בקלות בלי התקנות של postgresql. כדי לגשר בין הפער של שני הדיאלקטים וכדי לדאוג לאבסטרקציה, נשתמש ב־ORM המוביל עבור פייתון כרגע – SQLAlchemy.</li>
<li>לצורכי מיגרציה, נשתמש ב־Alembic.</li>
</ol>
<p>אם יעלה צורך בטכנולוגיות נוספות, נכניס אותן תוך כדי תוך התייעצות עם הקהילה.</p>
<h3>מה שיעורי הבית של השבוע?</h3>
<p>לפתור 3 “טיקטים” – באגים, הצעות לפיצ’ר, שיפור ארכיטקטוני או כל דבר שאתם מרגישים שאתם יכולים לתרום למערכת.</p>
<p>הדרישות מכל טיקט שכזה:</p>
<ol>
<li>
<strong>גודל סביר.</strong> בבקשה אל תפתחו ואל תעודדו הצעות כמו “להוסיף favicon”. יש לכם בסך הכל שלושה טיקטים לפתור השבוע – לא יהיו עוד שיעורי בית. בואו נרים יחד משהו מכובד.</li>
<li>
<strong>לפחות טיקט אחד של פיצ’ר לכל אדם</strong> – מתוך 3 הטיקטים שלכם, 1 לפחות צריך להיות הוספת יכולת למערכת.</li>
<li>
<strong>מותר יותר מ־3 טיקטים</strong> – תמיד אפשר לתרום עוד אם תרצו. זה נחמד לראות את הפיצ’רים שלכם באוויר.</li>
<li>
<strong>דברים מועילים שיביאו Value למערכת</strong>.</li>
</ol>
<h3>איך זה יעבוד?</h3>
<p>התהליך עובד כך:</p>
<h4>שלב ראשון: הגשת הצעה לטיקט</h4>
<p>כל אחד יכול להגיש הצעה לטיקט <a href="https://forums.pythonic.guru/c/week-16/ticket-ideas/29">כאן</a> – תחת הקטגוריה “הצעות לטיקטים”.<br>
פתחו אשכול חדש ובו כתבו בפירוט:</p>
<ol>
<li>מה ההצעה כוללת?</li>
<li>איך אתם מתכוונים לממש אותה?</li>
<li>אם היא כוללת שינויים בקוד: אילו שינויים? איפה הם יכנסו?</li>
<li>אם היא כוללת שינויים במסד הנתונים: אילו שינויים?</li>
<li>האם היא דורשת frontend? איך הוא יראה? ציירו mock.</li>
<li>אילו טסטים יגרמו לטיקט להיחשב כ"עובד", ויאפשרו לנו לסגור את הטיקט ולהגדיר את המשימה כהושלמה?</li>
</ol>
<p>כדי למנוע את היותי צוואר בקבוק, תצטרכו לצבור 5 לבבות על האשכול שלכם לפני שאסתכל עליו.<br>
עזרו לעצמכם ולאחרים: הסתכלו על הצעות של חברים שלכם והצביעו להן אם אתם חושבים שהן הצעות טובות.<br>
תרגישו בנוח להעיר ולהציע הצעות לשיפור ולגימור טוב יותר של הרעיון.</p>
<p>אחרי שצברתם 5 לבבות, פרסמו הודעה חדשה כתגובה לאשכול – “מבקש בדיקה”.<br>
בשלב הזה אני אסתכל על האשכול ואאשר שהרעיון הוא רעיון טוב ושאפשר להתחיל לעבוד עליו.<br>
בשלב הזה, פיתחו <a href="https://github.com/PythonFreeCourse/calendar/issues/new">Issue</a> ב־GitHub של הפרויקט עם כל הפרטים הרלוונטיים.</p>
<p>שימו לב: אם לא צברתם 5 לבבות תוך 72 שעות, האשכול ינעל ואנשים אחרים יוכלו להציע את אותו רעיון מחדש בצורה שונה. המנגנון הזה קיים כדי לא “לנעול” רעיונות לזמן בלתי מוגבל אצל אדם אחד.</p>
<h3>שלב שני: כתיבת הקוד</h3>
<h3>איך תורמים קוד מבחינה טכנית?</h3>
<ol>
<li>
<strong>עשו fork לפרויקט</strong>, בעזרת הכפתור בפינה הימנית העליונה בעמוד <a href="https://github.com/PythonFreeCourse/calendar">הזה</a>.</li>
<li>
<strong>עשו clone מתוך עמוד המשתמש שלכם</strong> (לא מעמוד הפרויקט!) בעזרת <code>git clone url</code>. לדוגמה: <code>https://github.com/yammesicka/calendar</code>.</li>
<li>
<strong>הוסיפו את ה־repo המקורי</strong>, כדי שתוכלו למשוך ממנו מידע כשהוא מתעדכן: <code>git remote add upstream https://github.com/PythonFreeCourse/calendar</code>. זה יאפשר לכל אחד לעבוד על ריפו בלתי תלוי משלו, אבל להיות מקושר לריפו שעליו כולם עובדים.</li>
<li>אם עבר זמן מאז שעשיתם clone, <strong>עדכנו את הקבצים בפרויקט</strong>: <code>git pull upstream develop</code>.</li>
<li>
<strong>צרו בראנץ’ חדש</strong>. תתחילו בלעבור ל־branch שנקרא <code>develop</code>, ממנו יצאו הפיצ’רים שלנו: <code>git checkout develop</code>. אחרי שעשיתם את זה, התפצלו לענף חדש בו תכתבו את הקוד שלכם: <code>git checkout -b branch_name</code>. ה־branch_name אמור לתאר במילה או שתיים את הפיצ’ר/באג שעליו אתם עובדים. אם זה פיצ’ר, השתמשו בתחילית <code>feature/</code> – לדוגמה, <code>feature/add-events</code>. תחיליות אפשריות נוספות: <code>refactor/</code>, <code>bugfix/</code>, <code>/build</code>. שימו לב שלא יאושר קוד שנוצר על ה־master/main/develop, ולא תינתן תמיכה בהעברת המידע לבראנץ’ חדש.</li>
<li>
<strong>כתבו את הקוד ואת הטסטים לקוד</strong>. ודאו שלא פגעתם ב־coverage של הפרויקט. הוסיפו דוקומנטציה ככל שיש בכך צורך.</li>
<li>
<strong>הוסיפו את הקוד</strong> בעזרת git add לקבצים הרלוונטיים, git commit עם הודעה מפורטת לפי <a href="https://www.conventionalcommits.org/en/v1.0.0/">Conventional Commits</a> ואז git push. צרו Pull Request לפרויקט.</li>
<li>כשאתם בוחרים לאיזה ענף לעשות Pull Request, בחרו develop. אל תשלחו PR־ים ל־main. להסברים לגבי שיטת העבודה הזו קראו <a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow">כאן</a>.</li>
</ol>
<h4>תרמתי קוד. מה עכשיו?</h4>
<p>פתחו אשכול בפורום <a href="https://forums.pythonic.guru/c/peer-reviews-requests/30">הזה</a> (“בקשות ל־Pull Requests”) עם קישור ל־Pull Request שלכם, והמתינו ל־5 אנשים שקראו את הקוד שלכם ונתנו לכם לב.<br>
קראו את הקוד שלכם לפני שליחת ה־PR, ומחקו קוד שמסומן בהערה והדפסות. ודאו שלא שכחתם typing ושדאגתם שהקוד שלכם נאה לקריאה ושהייבואים שלכם מסודרים בסדר הנכון.<br>
אחרי שצברתם 5 לבבות, פרסמו הודעה חדשה כתגובה לאשכול – “מבקש בדיקה”.<br>
בשלב הזה אני אסתכל על ה־PR ואאשר שהקוד הוא טוב, או אבקש שיפורים. אם הקוד טוב, אאשר אותו ואעשה לו deploy. את השינויים שהכנסתם תוכלו לראות באתר שכתובתו תפורסם בהמשך, ויריץ את המערכת שלנו.<br>
מזל טוב, תפרתם טיקט <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<h3>גילוי נאות</h3>
<p>זו פעם ראשונה שאני עושה את הטירוף הזה, ולכן הפורמט עתיד להשתנות בכל שלב שהוא.<br>
אני ממליץ לכם לזנק על הפרויקט כמה שיותר מוקדם, כדי לא להתקע בלי לבבות או עם טיקטים מסובכים מדי (מאוד כיף לעבוד על פרויקט בתחילת דרכו).</p>
<p>ההודעה פה היא wiki, כך שכולכם יכולים לערוך אותה. השתמשו בזה כדי להוסיף תשובות לשאלות נפוצות.</p>
<p><strong>בבקשה אל תפנו אלי בפרטי עם שאלות</strong>. כל מי שסיפרתי לו על הרעיון הזה אמר שאני חולה נפש ולנהל 40 ג’וניורים זה רעיון גרוע בכל קנה מידה. אני מאמין שכשיש חניכים אדירים עם קהילה מדהימה זה אפשרי.<br>
זה הזמן שלכם לתת כתף לחברים לקהילה (ולי) ולעזור ליצור פה מוצר מדהים.</p>
<p>בואו נגרום לזה לקרות <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
            <p><small>20 פוסטים - 7 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8633">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8633</link>
          <pubDate>Sun, 10 Jan 2021 18:15:05 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8633</guid>
          <source url="https://forums.pythonic.guru/t/topic/8633.rss">שבוע 16: אז... מה עכשיו?</source>
        </item>
        <item>
          <title>AMA: שאלות ואיך אפשר לעזור לכם לסיים את שבוע 15</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>עכשיו כשהתנסתם היטב בכל החומרים של שבוע 15 – איפה אתם מרגישים שקשה לכם במיוחד ותצטרכו חיזוק?<br>
שאלו כל דבר שעולה לכם לראש ואנסה להתייחס אליו באחד מהסרטונים הבאים שייצאו.</p>
            <p><small>21 פוסטים - 14 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/ama-15/8601">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/ama-15/8601</link>
          <pubDate>Sat, 02 Jan 2021 19:55:09 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8601</guid>
          <source url="https://forums.pythonic.guru/t/ama-15/8601.rss">AMA: שאלות ואיך אפשר לעזור לכם לסיים את שבוע 15</source>
        </item>
        <item>
          <title>הארכת הגשה, תרגול נוסף, שבוע 16</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>שלום לכולם וערב טוב,</p>
<p>חלק מכם פנו אלי ודיברו איתי על רמת הקושי של השבוע.<br>
הבנתי שרמת הקושי שתיכננתי שתאפיין את התרגילים השבוע לא תואמת את רמת הקושי שלהם בפועל.</p>
<p>כדי להיטיב עם החניכים שהגיעו עד הלום, אקח שני צעדים אקטיביים שיעזרו לכם לעמוד ביעד ההגשות:</p>
<ol>
<li>הגשת התרגילים תידחה ליום ראשון בשעה 19:00 (2021-01-10).</li>
<li>יעלו 2 סרטונים שלי באורך מלא (לא בטוח אם לייבים או לא, נחליט בהמשך) פותר בעיות סיבוכיות.</li>
</ol>
<p>כמו שאתם ודאי יודעים, זו פעם ראשונה שההגשה בקורס נדחית במועד כזה קצר, כשהתרגילים סופקו מראש.<br>
חשוב לי לתגמל את האנשים שכן השקיעו מזמנם והצליחו לעמוד ביעד ההגשה הלא פשוט.<br>
לכן, כל מי שסיים להגיש את כל התרגילים וירצה להתחיל בהגשות שבוע 16, יוכל לעשות את זה כבר מיום שני בערב (מועד ההגשה המקורי).</p>
<p>אני כמובן זמין לשאלות נוספות וכאן בשבילכם בהמשך.<br>
בהצלחה!</p>
            <p><small>פוסט 1 - משתתף 1</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8600">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8600</link>
          <pubDate>Sat, 02 Jan 2021 19:49:56 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8600</guid>
          <source url="https://forums.pythonic.guru/t/topic/8600.rss">הארכת הגשה, תרגול נוסף, שבוע 16</source>
        </item>
        <item>
          <title>תרגילים: שבוע 15</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h1>
<a name="h-1" class="anchor" href="https://forums.pythonic.guru#h-1"></a>תרגול</h1>
<h2>
<a name="h-2" class="anchor" href="https://forums.pythonic.guru#h-2"></a>ביטויים רגולריים</h2>
<h3>
<a name="h-3" class="anchor" href="https://forums.pythonic.guru#h-3"></a>על גלי האתר</h3>
<p>כתבו פונקציה שעוברת על קוד HTML, ומחלצת ממנו את כל הקישורים שמתחילים ב־<code>http://</code> או ב־<code>https://</code>. שימו לב שזה רק תרגיל, וככלל, זה נחשב <a href="https://stackoverflow.com/a/1732454/1058671">רעיון רע מאוד</a> להשתמש ב־Regular Expression כדי לחלץ נתונים מ־HTML.</p>
<h3>
<a name="h-4" class="anchor" href="https://forums.pythonic.guru#h-4"></a>סימון למטה</h3>
<p>כדי ליצור לינק בפורומים, אפשר לפתוח סוגריים מרובעים, לכתוב את המלל שיופיע כקישור, לסגור אותם, לפתוח סוגריים עגולים, להזין את הקישור ולסגור את הסוגריים העגולים. זה יראה כך:<br>
<code>[מערכת התרגילים](solve.pythonic.guru)</code>. כתבו פונקציה שמקבלת פוסט בפורום, ומחזירה רשימה של tuples, כך שעבור כל קישור בפוסט –</p>
<ol>
<li>במקום הראשון בכל tuple יופיע המלל של הקישור.</li>
<li>במקום השני יופיע הקישור עצמו.</li>
</ol>
<p>לדוגמה: <code>[('מערכת התרגילים', 'solve.pythonic.guru'), ('הפורומים', 'forums.pythonic.guru')]</code>.</p>
<h3>
<a name="h-5" class="anchor" href="https://forums.pythonic.guru#h-5"></a>הוא מגיע</h3>
<p>פתרו את <a href="https://adventofcode.com/2020/day/2">תרגיל 2</a> ואת <a href="https://adventofcode.com/2020/day/4">תרגיל 4</a> ב־Advent of Code 2020. השתמשו ב־Regular Expressions.</p>
<h3>
<a name="h-6" class="anchor" href="https://forums.pythonic.guru#h-6"></a>ר"ת</h3>
<p>כתבו פונקציה שמקבלת רצף מילים, ומחזירה את ראשי התיבות שלהן. לדוגמה: עבור <code>United States of America</code> היא תחזיר USoA. השתמשו ב־sub כדי להגיע לתוצאה הרצויה.</p>
<h3>
<a name="h-7" class="anchor" href="https://forums.pythonic.guru#h-7"></a>דחוף!!!</h3>
<p>כתבו פונקציה כנגד אנשים מציקים ומתלהמים בפורומים. הפונקציה תקבל מחרוזת שבה יש סימני פיסוק כפולים (כמו “עזרה דחוף!!!”) ותוריד את הכפילות (עזרה דחוף!). הפונקציה תעבוד גם על סימני שאלה, נקודה ופסיקים.</p>
<p>דוגמאות:</p>
<blockquote>
<p>אני צריך עזרה!,!!! דחוף!!!</p>
</blockquote>
<p>יהפוך ל</p>
<blockquote>
<p>אני צריך עזרה!,! דחוף!</p>
</blockquote>
<p>דוגמאות:</p>
<blockquote>
<p>אני צריך עזרה<code>!!!!!!!</code> דחוף?!?!</p>
</blockquote>
<p>יהפוך ל</p>
<blockquote>
<p>אני צריך עזרה! דחוף?!?!</p>
</blockquote>
<h3>
<a name="h-8" class="anchor" href="https://forums.pythonic.guru#h-8"></a>לפרק נתיבים</h3>
<p>כתבו פונקציה שמקבלת נתיב לקובץ במחשב, ומחזירה במילון שם התיקייה בה הוא נמצא, את שם הקובץ ואת הסיומת שלו.</p>
<p>לדוגמה, עבור הנתיב:</p>
<blockquote>
<p><code>C:\Berries Sherries\Music\Axis of Awesome\4 Chords.tar.gz</code></p>
</blockquote>
<p>יוחזר המילון:</p>
<blockquote>
<p><code>{'folder': 'Axis of Awesome', 'name': '4 Chords.tar', 'extension': 'gz'}</code></p>
</blockquote>
<h3>
<a name="h-9" class="anchor" href="https://forums.pythonic.guru#h-9"></a>סוגרים חשבון</h3>
<p>כתבו פונקציה שמקבלת ביטוי חשבוני ובודקת אם הוא תקין. ביטוי חשבוני נחשב תקין אם הוא מורכב ממספרים שביניהם הסימנים <code>+</code>, <code>-</code>, <code>*</code> או <code>/</code>, והוא מסתיים בסימן <code>=</code>. לדוגמה, הביטויים הבאים נחשבים חוקיים: <code>17/5=</code>, <code>5+2=</code>, <code>5=</code>, <code>99+1/2=</code>, <code>6.2*2=</code>, <code>6+4+3+1/2+6=</code>. הביטויים הבאים נחשבים לא חוקיים: <code>1.1.1=</code>, <code>1++7=</code>, <code>=1+1</code>, <code>1=1</code>, <code>1+=1</code>.</p>
<h3>
<a name="h-10" class="anchor" href="https://forums.pythonic.guru#h-10"></a>הערות</h3>
<p>כתבו ביטוי רגולרי שמוצא את כל ההערות מרובות השורות (שמתחילות ומסתיימות ב־<code>"""</code> או <code>'''</code>) בקוד פייתון. בונוס: נסו למצוא באותו ביטוי גם הערות רגילות (<code>#</code>).</p>
<hr>
<h2>
<a name="h-11" class="anchor" href="https://forums.pythonic.guru#h-11"></a>בדיקות תוכנה</h2>
<h3>
<a name="h-12" class="anchor" href="https://forums.pythonic.guru#h-12"></a>רגע, צדקתי?</h3>
<p>כתבו בדיקות לתרגילים “סימון למטה”, “לפרק נתיבים” ו"הערות".</p>
<h3>
<a name="h-13" class="anchor" href="https://forums.pythonic.guru#h-13"></a>חיים שלי</h3>
<p>“משחק החיים” מתרחש בטבלה בגודל אינסופי (לצורך התרגיל, גודלה יהיה 50 על 50).<br>
ערך ברירת המחדל של כל התאים בטבלה הוא “מת”, כלומר 0.<br>
לפני המהלך הראשון של המשחק, “מחיים” מספר תאים בטבלה, כלומר, משנים את ערכם מ־0 ל־1.</p>
<p>המשחק מתרחש ב"דורות", כאשר בכל דור (<span class="math">T</span>) מצב הלוח מתעדכן לפי מצב הלוח בדור הקודם (<span class="math">T - 1</span>).<br>
מצבו של תא בדור <span class="math">T</span> יקבע לפי כמות השכנים שלו, קרי, כמות התאים שמקיפים אותו (בצדדים ובאלכסוניו – 8 במספר).</p>
<p>בדור <span class="math">T</span>, תא חי ימות (ערכו ישתנה ל־0) אם אחד התנאים הבאים התקיים:</p>
<ol>
<li>כמות השכנים החיים שלו בדור <span class="math">T-1</span> היא פחות מ־2 – התא ימות מבדידות.</li>
<li>כמות השכנים החיים שלו בדור <span class="math">T-1</span> היא יותר מ־3 – התא ימות מצפיפות יתר.</li>
</ol>
<p>בדור <span class="math">T</span>, תא מסוים יחיה (ערכו יישאר או ישתנה ל־1) אם אחד התנאים הבאים התקיים:</p>
<ol>
<li>הוא היה חי, וכמות השכנים החיים שלו בדור <span class="math">T-1</span> היא בין 2 ל־3 – התא ממשיך לדור הבא.</li>
<li>הוא היה מת, אבל כמות השכנים החיים שלו בדור <span class="math">T-1</span> היא 3 בדיוק – ככה תאים באים לעולם. דילגו על הרעיון של חסידות וכו’.</li>
</ol>
<p>החוקים שתוארו עד כה למשחק החיים קיבלו את הסימון <code>B3/S23</code>:</p>
<ol>
<li>תא נולד (<code>B</code>) אם יש לו 3 שכנים חיים.</li>
<li>תא שורד (<code>S</code>) אם יש לו 2 או 3 שכנים חיים.</li>
<li>בכל מצב אחר הוא מת.</li>
</ol>
<p>צרו פונקציה שנקראת <code>game_of_life</code> ומקבלת כפרמטר את סימון החוקים.<br>
אם לא הועבר לפונקציה סימון חוקים, השתמשו בחוקים <code>B3/S23</code> המופיעים מעלה.<br>
הפונקציה תציג <a href="https://www.youtube.com/watch?v=OEbCsKJKXaE">סימולציה ויזואלית</a> של “משחק החיים” – בין אם בעזרת <code>print</code> או בעזרת כלים כמו <code>pygame</code>.</p>
<p>הפרידו לפונקציות ככל האפשר וכתבו קוד מסודר ונעים לתחזוקה.<br>
כיתבו בדיקות לכל הפונקציות שלכם, ונסו להגיע ל־100% כיסוי.</p>
<p>(העתקות מהאינטרנט של התרגיל הזה לא יתקבלו בעין יפה <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:"> )</p>
<h3>
<a name="scream-14" class="anchor" href="https://forums.pythonic.guru#scream-14"></a>פרויקט בלי בדיקות? <img src="https://forums.pythonic.guru/images/emoji/twitter/scream.png?v=12" title=":scream:" class="emoji" alt=":scream:">
</h3>
<p>הוסיפו בדיקות לפרויקט שבניתם בשבוע שעבר.<br>
קראו על הוספת בדיקות ל־Flask בעמוד התיעוד המתאים.<br>
ודאו שיש לכם 80% כיסוי לפחות.</p>
<hr>
<h2>
<a name="h-15" class="anchor" href="https://forums.pythonic.guru#h-15"></a>סיבוכיות</h2>
<h3>
<a name="h-16" class="anchor" href="https://forums.pythonic.guru#h-16"></a>יעילות בסיסית</h3>
<p>כתבו מה היעילות של כל אחד מהפעולות הבאות.<br>
השתמשו בגוגל כדי לחפש את סיבוכיות הזמן (time complexity) של כל אחד מהבאים.<br>
אם אפשר, התייחסו למקרה הממוצע (Average case) ולא למקרה הגרוע ביותר (Worst case):</p>
<ol>
<li>רשימה בפייתון: הוספת איבר אחרון, הוספת איבר שאינו אחרון, מחיקת איבר אחרון, מחיקת איבר שאינו אחרון, פנייה לאיבר ברשימה, חיפוש איבר ברשימה (<code>in</code>), מציאת אורך הרשימה.</li>
<li>מילון בפייתון: הוספת איבר חדש, אחזור איבר לפי key, אחזור איבר לפי value, מחיקת איבר, חיפוש איבר במילון (<code>in</code>).</li>
<li>קבוצה (set) בפייתון: הוספת איבר חדש, מחיקת איבר, חיפוש איבר (<code>in</code>).</li>
<li>סידור של n מספרים ברשימה בלתי ממויינת. רמז: אין הנחות נוספות לגבי הרשימה, ועליכם להתייחס לאלגוריתמים מבוססי השוואה.</li>
<li>מציאת איבר ברשימה מסודרת, ומציאת איבר ברשימה לא מסודרת.</li>
</ol>
<h3>
<a name="h-17" class="anchor" href="https://forums.pythonic.guru#h-17"></a>יעילות בחיים</h3>
<p>מה היעילות של “משחק החיים” שכתבתם בתרגיל על בדיקות תוכנה?<br>
מה היעילות של כל אחת מהפונקציות שבו?<br>
צרפו קישור לתרגיל “משחק החיים” שהעלתם.</p>
<h3>
<a name="h-18" class="anchor" href="https://forums.pythonic.guru#h-18"></a>הפרש סכום הריבועים</h3>
<p>סכום הריבועים של המספרים הטבעיים עד 5 הוא <span class="math">1^2 + 2^2 + 3^2 + 4^2 + 5^2 = 55</span>.<br>
ריבוע הסכום של המספרים הטבעיים עד 5 הוא <span class="math">(1 + 2 + 3 + 4 + 5)^2 = 15 ^ 2 = 225</span>.</p>
<p>כלומר, הפרש סכום הריבועים במקרה שבו <span class="math">N=5</span> הוא 170, שכן <span class="math">225-55=170</span>.</p>
<p>כתבו תוכנה שמקבלת <span class="math">N</span> ומחזירה את הפרש סכום הריבועים. מה יעילותה?<br>
בונוס למתמטיקאים: האם תוכלו לפתור ביעילות זמן ריצה <span class="math">O(1)</span>?</p>
<h3>
<a name="h-19" class="anchor" href="https://forums.pythonic.guru#h-19"></a>על הדרך מושיק</h3>
<p>נצייר טבלה בגודל 2 על 2, ונמקם את מושיק בשולחן השופטים ש<strong>בנקודה</strong> השמאלית העליונה של הטבלה (לא בתא).<br>
מושיק יודע לנוע רק ימינה ולמטה, כך שיש לו 6 דרכים בלבד להגיע לנקודה הימנית התחתונה בטבלה, הרי היא המנה הנכספת:</p>
<p><img src="https://forums.pythonic.guru/uploads/default/original/2X/4/47c3de14c5323e0e64f53acbcff46408f9017c22.png" alt="Untitled Diagram" data-base62-sha1="aeRxLqaVWLJiio5M9KioqKEwGSC" width="359" height="219"></p>
<p>קבלו כקלט את גודל הטבלה, <span class="math">N</span>.<br>
בכמה דרכים יכול מושיק להגיע למנה?<br>
מה היעילות של התוכנית שכתבתם?</p>
<h3>
<a name="h-20" class="anchor" href="https://forums.pythonic.guru#h-20"></a>קריוס ובקטוס</h3>
<p>אזדרכת וחשבשבת צריכות להתחלק בסופגניות הזעירות שקיבלו בחנוכה.<br>
לצורך כך, הן בנו משחק שמשתמש בטבלה ריבועית <span class="math">M</span> בגודל <span class="math">X</span> על <span class="math">X</span> שמולאה במספרים באופן אקראי.</p>
<p>בתחילת המשחק, אזדרכת בוחרת שורה כרצונה (<span class="math">i</span>) ומעבירה עליה קו כחול.<br>
חשבשבת בוחרת בעמודה כרצונה (<span class="math">j</span>) ומעבירה על כל המספרים בה קו אדום.<br>
אזדרכת עכשיו לוקחת סופגניות זעירות כמספר שמופיע בטבלה במקום <span class="math">M_{ij}</span>.<br>
עכשיו אזדרכת שוב בוחרת שורה כרצונה (<span class="math">k</span>; שחייבת להיות שורה שבה לא בחרה בעבר), וחשבשבת שוב בוחרת עמודה בטבלה (<span class="math">l</span>; שחייבת להיות עמודה שלא בחרה בעבר).<br>
אזדרכת לוקחת הפעם <span class="math">M_{kl}</span> סופגניות.<br>
בכל שלב במשחק, אם מספר הסופגניות בתא הנבחר הוא שלילי, אזדרכת מאבדת את מספר הסופגניות הזה, והסופגניות עוברות לחשבשבת.<br>
המשחק ממשיך עד שמועבר קו על כל המספרים שבטבלה.</p>
<p>מה מספר הסופגניות הגדול ביותר שאזדרכת יכולה להרוויח אם גם אזדרכת וגם חשבשבת משחקים בצורה הטובה ביותר?<br>
לצורך התרגיל, השתמשו בטבלה בגודל 4 על 4.<br>
מה היעילות של התוכנית שכתבתם כדי לגלות זאת?</p>
<h3>
<a name="h-21" class="anchor" href="https://forums.pythonic.guru#h-21"></a>דונלד</h3>
<p>דונלד הקים חנות למכירת ברווזי גומי.<br>
באחד הטרמפים שלקח עם חברו, קנות’, הידוע כדאקדקן במיוחד בענייני חשבונאות,<br>
סיפר לו דונלד כיצד הוא מנהל את החשבונות בחנות שלו.</p>
<p>עבור כל קנייה, דונלד רושם בקובץ את סכום הקנייה כשלפניה מופיע הסימן <code>+</code>.<br>
כל פעם שדולנד קונה סחורה חדשה עבור החנות, דונלד רושם בקובץ את הסימן מינוס, ואז את הסכום שהוציא.</p>
<p>לדוגמה, החודש היו לו 3 לקוחות שקנו ממנו ברווזי גומי ב־50, 60 ו־70 שקלים, והוא ביצע 2 רכישות בשווי 120 ו־2 שקלים.<br>
קובץ החשבונות שלו החודש נראה כך:</p>
<pre><code class="lang-auto">+50
+60
-120
+70
-2
</code></pre>
<p>כתבו שתי פונקציות שיעזרו לדולנד:</p>
<ol>
<li>הפונקציה <code>parse_file</code> שתקבל נתיב לקובץ, ותחזיר מבנה נתונים שיהיה נוח לעבוד איתו.</li>
<li>דונלד רוצה להתרברב בכמה שהוא עשיר. עזרו לו לכתוב את הפונקציה <code>very_rich</code>, שמחזירה את הסכום הגבוה ביותר שהרוויח בימים רצופים החודש. בדוגמה שניתנה למעלה, הסכום הוא 110: בימים הראשון והשני דונלד הרוויח 110 ש"ח. לאחר מכן הפסיד 120 ש"ח (סך הכל חובות של 10 ש"ח) ואז הרוויח 70 ש"ח (מרווח 60 ש"ח). בדוגמה הבאה, דונלד יתרברב על רווח של 45 ש"ח בין הימים השלישי לשישי. ממשו את הפונקציה הזו ביעילות זמן ריצה של לפחות <span class="math">O(n^2)</span>. האם יש לכם רעיון אפילו טוב יותר?</li>
</ol>
<pre><code class="lang-auto">+5
-10
+30
+10
-5
+10
-40
+30
</code></pre>
<h3>
<a name="h-22" class="anchor" href="https://forums.pythonic.guru#h-22"></a>הורדות</h3>
<p>ביום הראשון של הקורס, כשב־LIVE ביקשתי מהחניכים להוריד את Anaconda Python, השרתים שלהם קרסו.<br>
בתחקור שלאחר המעשה, בעלי השרת ניסו להבין איפה היה העומס הרב ביותר על השרת.<br>
לצורך כך, הם קיבלו את התיעוד של מה קרה בשרת.</p>
<p>כל שורה בקובץ מורכבת מ־3 חלקים:</p>
<ol>
<li>ה־IP שממנו נשלחה בקשת ההורדה, ואחריו נקודתיים.</li>
<li>הזמן (בשניות מאז עליית השרת) שבו כל IP התחיל להוריד את הקובץ, ואחריו מקף.</li>
<li>הזמן (בשניות מאז עליית השרת) שבו כל IP סיים להוריד את הקובץ.</li>
</ol>
<p>לדוגמה:</p>
<pre><code class="lang-nohighlight">193.238.175.157: 503-584
81.173.1.186: 324-793
208.195.27.101: 224-710
198.241.74.162: 747-770
201.96.152.206: 601-861
159.10.243.192: 823-879
137.221.214.153: 416-975
24.139.10.160: 190-323
136.244.3.48: 640-975
117.126.245.109: 67-302
</code></pre>
<p>עזרו למחלקת ה־IT לתחקר את המקרה: באיזה טווח שניות היו הכי הרבה חיבורים פתוחים מול השרת.<br>
אם מספר החיבורים המירבי התרחש ביותר מנקודת זמן אחת, החזירו את נקודת הזמן הראשונה שבה זה קרה.<br>
בדוגמה שהוצגה למעלה, נניח, מספר החיבורים המירבי היה 5, בין השניות 640 ל־711.</p>
<p>פתרו בסיבוכיות זמן ריצה <span class="math">O(n\log{n})</span>.<br>
הניחו שהמספרים יכולים להיות גדולים מאוד – השרת רץ מאז 1980 לפחות, ויש אגדות על כמה הורדות שעדיין לא הסתיימו מאז…</p>
            <p><small>36 פוסטים - 14 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8568">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8568</link>
          <pubDate>Fri, 18 Dec 2020 10:43:26 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8568</guid>
          <source url="https://forums.pythonic.guru/t/topic/8568.rss">תרגילים: שבוע 15</source>
        </item>
        <item>
          <title>שבוע 15: תוכנית למידה</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>ברוכים הבאים לשבוע לפני האחרון של הקורס.<br>
סחטיין ששרדתם עד לכאן, ומקווה שאתם, כמוני, מתרגשים מהריח של סוף המסלול.</p>
<p>השבוע (15) נלמד 3 נושאים:</p>
<ol>
<li>ביטויים רגולריים</li>
<li>מבוא לבדיקות תוכנה</li>
<li>מבוא ליעילות</li>
</ol>
<p>פרסום תרגילים: יום חמישי בערב (17/12).<br>
הגשה: 4/1; <strong>בשעה 19:00</strong>.</p>
<h2>תתי נושאים (רשימת תיוג)</h2>
<h3>ביטויים רגולריים</h3>
<ol>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> מבוא: תבניות, חיפושים במלל, ממשק לשחק בו עם Regular Expressios.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> כמתים (Quantifiers); הכמתים <code>?</code>, <code>*</code>, <code>+</code>, <code>{x, y}</code>.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> תווים מיוחדים: <code>.</code>, מחלקות תווים (class; מחלקות שלילה), קיצורים לקבוצות תווים.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> מצב “חיפוש פר שורה”, התווים המיוחדים <code>$</code> ו־<code>^</code>.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> קבוצות (groups), “או” בקבוצות, תפיסת ביטויים, התייחסות לקבוצות עבר (Backreference), קבוצות ללא תפיסה.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> חמדנות.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> חיפושים מתקדמים: Lookaround.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> הגדרת שם לקבוצות (Named Groups)</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> חיבור לפייתון:<br>
9.1. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> <code>findall</code>/<code>finditer</code>.<br>
9.2. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> חיפושים שמניבים אובייקט <code>match</code>, לדוגמה <code>search</code>, <code>match</code> או <code>fullmatch</code>.<br>
9.3. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> דגלים (flags) לשימוש בפייתון.<br>
9.4. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> הידור ביטויי Regular Expressions.<br>
9.5. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> קבוצות, קבוצות בעלות שם ותוצאות כמילון (<code>groups</code>, <code>groupdict</code>).<br>
9.6. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> החלפה באמצעות <code>sub</code>.</li>
</ol>
<h3>מבוא לחישוביות</h3>
<ol>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> מה זה “סיבוכיות”?<br>
1.1. <span class="chcklst-box fa fa-square-o fa-fw"></span> סוגי יעילות (סיבוכיות זמן ריצה, סיבוכיות מקום, סיבוכיות תוכנה)</li>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> מה זה סיבוכיות ציקלומטית, איך מחשבים אותה ואיך מורידים אותה?</li>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> סיבוכיות מקום וזמן ריצה<br>
3.1. <span class="chcklst-box fa fa-square-o fa-fw"></span> ספירת הוראות בתוכנה ולמה זה לא אפקטיבי<br>
3.2. <span class="chcklst-box fa fa-square-o fa-fw"></span> איך נכון למדוד? מה זה Big O, תטא ואומגה.<br>
3.3. <span class="chcklst-box fa fa-square-o fa-fw"></span> מה זה סיבוכיות קבועה.<br>
3.4. <span class="chcklst-box fa fa-square-o fa-fw"></span> מה זה סיבוכיות פולינומית<br>
3.5 <span class="chcklst-box fa fa-square-o fa-fw"></span> האם יש גרוע יותר מסיבוכיות פולינומית?</li>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> אנקדוטלי: על מחלקות סיבוכיות, P ו־NP.</li>
</ol>
<h3>מבוא לבדיקות תוכנה</h3>
<ol>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> תיאוריה<br>
1.1. <span class="chcklst-box fa fa-square-o fa-fw"></span> מונחים: בדיקות יחידה (unittests), בדיקות כִּלּוּל (integration tests), בדיקות קצה לקצה (end to end tests)<br>
1.2. <span class="chcklst-box fa fa-square-o fa-fw"></span> מונחים: בדיקות קבלה (acceptence tests).<br>
1.3. <span class="chcklst-box fa fa-square-o fa-fw"></span> מונחים: TDD, BDD, Coverage, Whitebox Testing, Blackbox Testing.</li>
<li>
<span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> מילת המפתח assert</li>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> המודול pytest<br>
3.1. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> בדיקות פשוטות<br>
3.2. <span class="chcklst-box fa fa-square-o fa-fw"></span> בדיקה ש־Exception נזרק<br>
3.3. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> דילוג על בדיקות<br>
3.4. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> conftest.py<br>
3.5. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> יצירת fixtures<br>
3.6. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> יצירת parameterization</li>
<li>
<span class="chcklst-box fa fa-square-o fa-fw"></span> תוספים ופלאגינים ל־Pytest<br>
5.1. <span class="chcklst-box fa fa-square-o fa-fw"></span> הטלאת קופים (Monkey patching; העברית זו המצאה שלי <img src="https://forums.pythonic.guru/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> )<br>
5.2. <span class="chcklst-box fa fa-square-o fa-fw"></span> חיקוי חלקים במערכת (Mock באמצעות pytest-mock)<br>
5.3. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> רוחב כיסוי (coverage)<br>
5.4. <span class="chcklst-box checked fa fa-check-square-o fa-fw"></span> pytest-flask</li>
</ol>
<h2>קישורים ללמידה עצמאית</h2>
<h3>ביטויים רגולריים</h3>
<ol>
<li>
<a href="https://regexone.com/lesson/introduction_abcs">בסיס אינטרקטיבי</a>.</li>
<li>
<a href="https://www.regular-expressions.info/tutorial.html">מדריך מאוד מפורט אך מעט חופר</a>.</li>
<li>
<a href="https://developers.google.com/edu/python/regular-expressions">קישור של Regular Expressions לפייתון</a>.</li>
<li>
<a href="https://docs.python.org/3/library/re.html">התיעוד של מודול re בפייתון</a> או <a href="https://docs.python.org/3/howto/regex.html">מדריך ל־Regular Expression בפייתון</a>.</li>
</ol>
<h3>מבוא לבדיקות תוכנה</h3>
<ol>
<li><a href="https://automationpanda.com/testing/">הקדמה לבדיקות</a></li>
<li><a href="https://testautomationu.applitools.com/pytest-tutorial/">קורס מקוצר ל־pytest</a></li>
<li><a href="https://testing.googleblog.com/">העשרה: בלוג הטסטים של גוגל</a></li>
</ol>
<h3>מבוא ליעילות</h3>
<ol>
<li>
<a href="https://discrete.gr/complexity/?he">מבוא עדין לניתוח של סיבוכיות נתונים</a> (מתורגם. למעדיפים באנגלית: <a href="https://discrete.gr/complexity/">כאן</a>).</li>
<li>
<a href="https://youtu.be/tk3wiMbQmow?t=958">הרצאה של דיוויד מלן</a> (המרצה האהוב עליי), <a href="https://cs50.harvard.edu/x/2020/notes/3/">חומר כתוב של CS50</a> (הקורס שהוא מעביר).</li>
</ol>
<p>לייבים – כל יום בשבוע הבא משעה 20:00 ועד 22:00 בערך.<br>
יתכנו ביטולים או הזזות (עדכונים <a href="https://t.me/joinchat/CfaHxBpwPvzcAOAVWmoh_Q">בקבוצת הטלגרם</a>).</p>
            <p><small>פוסט 1 - משתתף 1</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8565">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8565</link>
          <pubDate>Wed, 16 Dec 2020 17:36:12 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8565</guid>
          <source url="https://forums.pythonic.guru/t/topic/8565.rss">שבוע 15: תוכנית למידה</source>
        </item>
        <item>
          <title>פרויקט יחד – חלק 3</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>חלקים קודמים בסדרה:</p>
<ul>
<li><a href="https://forums.pythonic.guru/t/topic/8485">פרויקט יחד – חלק 1</a></li>
<li><a href="https://forums.pythonic.guru/t/topic/8490">פרויקט יחד – חלק 2</a></li>
</ul>
<h3>הקדמה</h3>
<p>מנסיונותיי הקודמים של הדרכת קורסים, חלק גדול לא מצליחים לעמוד בקושי של שלבי הפרוייקטים.<br>
הסיבה היא שהמטלה שנתתי לא מוגדרת מספיק, וקשה לתכנן נכון את הזמנים ולמצוא רעיונות.<br>
אבל הגעתם עד כאן – אתן ואתם יותר טובות וטובים מזה, נכון? <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>אשתדל לפרסם פה כל יומיים פוסט עם הצעד הבא שכדאי לכם לקחת.<br>
אם תעקבו אחרי ההדרכה ובזמנים שמפורסמים כאן, תספיקו בוודאות להגיש את הפרויקט, ותהיה לכם רשת תמיכה נוחה יחסית של עוד אנשים שנמצאים איתכם באותו שלב.<br>
כמובן שזה לא מחייב, ואני סומך עליכם שאם לא תבחרו לעקוב אחרי ה־timeline של הפוסט הזה תצליחו בלי קשר.</p>
<h2>חלק 3</h2>
<h3>מה אמור להיות לכם בשלב הזה?</h3>
<ol>
<li>חשבתם על רעיון לפרויקט</li>
<li>יש לכם ERD</li>
<li>חשבתם איך כל אחד מהאובייקטים שתיארתם כטבלה קשור לפעולות ה־CRUD שלכם.</li>
<li>קראתם על JOIN במחברת החדשה שיצאה.</li>
<li>קראתם על INSERT, CREATE, יצרתם את מבנה ה־database באמצעות ה־ERD.</li>
<li>איישתם את מסד הנתונים בנתונים.</li>
<li>יצרתם פונקציות עבור (חלק) מאפשרויות ה־CRUD על מסד הנתונים שלכם.</li>
<li>חיברתם את האפליקציה עם Flask באופן שמתחילים לראות משהו (לפחות אות אחת מה־CRUD מונגשת בעזרת Web).</li>
</ol>
<p>לסרטון שיצא בעניין:</p>
<ol>
<li>אפשר לראות אותי עובר את השלבים האלו בסרטון האחרון של השבוע: <a href="https://forums.pythonic.guru/t/1-12-14-1/8502">שיעור לייב עם ים - 1/12 - שבוע 14 שיעור 1</a>
</li>
<li>או את כל הסרטונים שיצאו עד כה כאן: <a href="https://forums.pythonic.guru/t/topic/7920">לינקים לסרטוני הלייב עם ים - מתעדכן</a>.</li>
</ol>
<h3>השלב הבא:</h3>
<h4>צרו Frontend בסיסי.</h4>
<ol>
<li>צרו עמוד בסיסי (base.j2) שישמש כ־template כללי שאפשר להרחיב באתר שלכם.</li>
<li>צרו style.css עם CSS שיגרום לאתר שלכם להיראות סבבה.</li>
<li>השתמשו ב־<code>render_template</code> כדי להעביר פרמטרים מהפונקצייה לעמוד.</li>
</ol>
<h4>צרו מודל ORM עובד</h4>
<ol>
<li>בעזרת peewee או SQLAlchemy, צרו מודל ORM שמתאר את הישויות במסד הנתונים שלכם.</li>
<li>ודאו שאתם מסמנים בקוד את כל הדברים הרלוונטיים: NOT NULL, מפתחות ראשיים ומפתחות זרים.</li>
<li>ודאו שהמודל ORM הסופי תואם את המודל שחשבתם ליצור עבור האפליקציה.</li>
</ol>
<p>טיפ: אם כבר יש לכם database, שני המודולים (peewee ו־SQLAlchemy) יודעים לג’נרט קוד פייתון שתואם את ה־ORM. אם החלטתם ללכת בדרך הזו, ודאו שאתם יודעים לכתוב את הקוד גם בעצמכם ומבינים מה קורה בו. לא אחת המודולים לא מבצעים עבודה מושלמת ותצטרכו לעזור להם.</p>
<h4>שכתבו את הפונקציות של ה־CRUD</h4>
<p>בד"כ מודולים של ORM כמו peewee או SQLAlchemy באים עם יכולות נוספות, כמו אבסטרקציה ל־SQL.<br>
היכולת הזו מאפשרת לכתוב בפייתון משהו שדומה ל־SQL – אבל בעזרת פונקציות פייתוניות.<br>
המודול שמאחורה ממיר את הכתיבה הפייתונית ל־SQL, בצורה שתעבוד על כל מסדי הנתונים (SQLite, PostgreSQL, SQL Server, MySQL וכד’).</p>
<ol>
<li>קראו על SQLAlchemy Core ועל Peewee Querying. הבינו איך לכתוב שאילתות בעזרת אחד מהם.</li>
<li>החליפו את המימושים הקיימים שלכם ואת כל השאילתות שכתבתם בקוד כך שישתמשו ב־SQLAlchemy/Peewee. אם הפרדתם היטב לפונקציות זה לא אמור לקחת יותר מדי זמן.</li>
<li>המשיכו לממש פונקציות נוספות בעזרת peewee/SQLAlchemy. זה השלב שבו צריך לדהור לעבר מימוש כל הפונקציונליות מאחורי הקלעים באמצעות ה־ORM.</li>
</ol>
<p>יש בסעיף הקטן והתמים למראה הזה טון וחצי של עבודה.<br>
ליצור frontend, backend ולממשק עם ה־ORM זה ממש לא שנייה וחצי.<br>
התחילו מוקדם ככל האפשר.</p>
<h2>הצילו</h2>
<p>במהלך כתיבת החלק הזה אתם עשויים להיתקל בהרבה שאלות.<br>
גגלו, בדקו, ואז נסו להיעזר בחברים שלכם ובשותפים לפורום.<br>
אל תשמרו את זה לדקה האחרונה – יש פה הרבה עבודה לעשות <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
            <p><small>פוסט 1 - משתתף 1</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8503">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8503</link>
          <pubDate>Wed, 02 Dec 2020 00:21:47 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8503</guid>
          <source url="https://forums.pythonic.guru/t/topic/8503.rss">פרויקט יחד – חלק 3</source>
        </item>
        <item>
          <title>פרויקט יחד – חלק 2</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>[לחלק הקודם לחצו <a href="https://forums.pythonic.guru/t/topic/8485">כאן</a>]</p>
<h3>הקדמה</h3>
<p>מנסיונותיי הקודמים של הדרכת קורסים, חלק גדול לא מצליחים לעמוד בקושי של שלבי הפרוייקטים.<br>
הסיבה היא שהמטלה שנתתי לא מוגדרת מספיק, וקשה לתכנן נכון את הזמנים ולמצוא רעיונות.<br>
אבל הגעתם עד כאן – אתן ואתם יותר טובות וטובים מזה, נכון? <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>אשתדל לפרסם פה כל יומיים פוסט עם הצעד הבא שכדאי לכם לקחת.<br>
אם תעקבו אחרי ההדרכה ובזמנים שמפורסמים כאן, תספיקו בוודאות להגיש את הפרויקט, ותהיה לכם רשת תמיכה נוחה יחסית של עוד אנשים שנמצאים איתכם באותו שלב.<br>
כמובן שזה לא מחייב, ואני סומך עליכם שאם לא תבחרו לעקוב אחרי ה־timeline של הפוסט הזה תצליחו בלי קשר.</p>
<h2>חלק 2</h2>
<h3>מה אמור להיות לכם בשלב הזה?</h3>
<ol>
<li>חשבתם על רעיון לפרויקט</li>
<li>יש לכם ERD</li>
<li>חשבתם איך כל אחד מהאובייקטים שתיארתם כטבלה קשור לפעולות ה־CRUD שלכם.</li>
<li>התחלתם לקרוא על JOIN במחברת החדשה שיצאה.</li>
</ol>
<h3>השלב הבא: יצירת מסד הנתונים</h3>
<h4>צרו מסד נתונים עבור האפליקציה.</h4>
<p>קראו על השאילתות <code>CREATE</code> ו־<code>INSERT</code>.</p>
<ol>
<li>צרו מסד נתונים לדוגמה (SQLite) שאתם יכולים לעבוד עליו.</li>
<li>צרו את הטבלאות ואת מבנה הטבלאות לפי ה־ERD ששירטתתם.</li>
<li>הכניסו בו נתונים מדמיונכם הפרוע.</li>
</ol>
<h4>צרו פונקציות עבור פעולות ה־CRUD.</h4>
<p>בחרו אובייקט <em>אחד</em> שרלוונטי לפרויקט שלכם – משתמשים, ספרים וכד’. צרו עבורו פונקציות שממשות את רעיון ה־CRUD עבורו.</p>
<p>ודאו שיש לכם פונקציות שיודעות לקרוא את הנתונים הרלוונטיים לאתר שלכם, לכתוב נתונים חדשים, לעדכן נתונים קיימים ולמחוק נתונים שצריכים להימחק.<br>
חשוב! הפרדה לפונקציות בשלב הזה תדאג שיהיה לכם קל להמשיך מהמקום בו עצרתם, ולא תצטרכו לכתוב בעתיד חלק גדול מהקוד מחדש. הקפידו על כך.</p>
<p>דוגמאות ל־3 בחירות שונות של אובייקטים עבורם כתבנו פונקציות, ברמת קושי שונה:</p>
<ol>
<li>הפונקציה <code>add_user</code> תיצור משתמש חדש במסד הנתונים. הפונקציה תחזיר שגיאה אם שם המשתמש קיים כבר, או את מספר המשתמש אם נוצר משתמש חדש.</li>
<li>הפונקציה <code>add_book</code> תקבל את שם הספר, השנה שבה יצא, מספר העמודים שבו ואת שם הסופר. אם אין ספר עם פרטים כאלו באתר, היא תוסיף אותו. אתר מושקע יכול להכיל גם טבלת סופרים ולבצע קישור ביניהם. הפונקציה תחזיר את מספר הספר.</li>
<li>הפונקציה <code>add_book_to_users_shelf</code> תקבל מספר מזהה של ספר במסד הנתונים, ותוסיף אותו לספרייה של  המשתמש אם הספר לא כבר קיים שם. היא תעשה זאת על ידי קריאה ל־2 פונקציות: הראשונה תבדוק שמספר הספר אכן קיים במסד הנתונים, השנייה תבדוק שהמשתמש שקיבלה אכן קיים. הפונקציות הללו יחזירו False אם הישויות לא קיימות, או את מספר הישות במסד הנתונים אם הן כן קיימות. הפונקציה השלישית תשתמש בנתונים שחזרו כדי להוסיף שורה לטבלה המקשרת.</li>
</ol>
<h4>חברו עם Flask.</h4>
<p>צרו כתובות שיאפשרו למשתמשים לשלוח פרטים שיפעילו את פונקציות ה־CRUD שכתבתם.</p>
<p>לדוגמה, אם בחרנו לממש את <code>add_user</code>, אפשרו למשתמש לגשת לכתובת <code>/register</code> ולשלוח בעזרת טופס (<code>FORM</code>) ב־<code>POST</code> את הפרטים שלו.</p>
<h2>הצילו</h2>
<p>במהלך כתיבת החלק הזה אתם עשויים להיתקל בהרבה שאלות.<br>
גגלו, בדקו, ואז נסו להיעזר בחברים שלכם ובשותפים לפורום.<br>
אל תשמרו את זה לדקה האחרונה – יש פה הרבה עבודה לעשות <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>החלק הבא יפורסם ביום רביעי.</p>
            <p><small>2 פוסטים - 2 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8490">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8490</link>
          <pubDate>Sat, 28 Nov 2020 21:44:36 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8490</guid>
          <source url="https://forums.pythonic.guru/t/topic/8490.rss">פרויקט יחד – חלק 2</source>
        </item>
        <item>
          <title>פרויקט יחד: עושים את הפרויקט בשלבים ועומדים בזמני ההגשה</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>מנסיונותיי הקודמים של הדרכת קורסים, חלק גדול לא מצליחים לעמוד בקושי של שלבי הפרוייקטים.<br>
הסיבה היא שהמטלה שנתתי לא מוגדרת מספיק, וקשה לתכנן נכון את הזמנים ולמצוא רעיונות.<br>
אבל הגעתם עד כאן – אתן ואתם יותר טובות וטובים מזה, נכון? <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>אשתדל לפרסם פה כל יומיים פוסט עם הצעד הבא שכדאי לכם לקחת.<br>
אם תעקבו אחרי ההדרכה ובזמנים שמפורסמים כאן, תספיקו בוודאות להגיש את הפרויקט, ותהיה לכם רשת תמיכה נוחה יחסית של עוד אנשים שנמצאים איתכם באותו שלב.<br>
כמובן שזה לא מחייב, ואני סומך עליכם שאם לא תבחרו לעקוב אחרי ה־timeline של הפוסט הזה תצליחו בלי קשר.</p>
<h3>שלב ראשון: חושבים על רעיון לפרויקט</h3>
<p>השלב הזה ימשך עד עוד יומיים (עד יום ראשון, בו יפורסם השלב הבא).<br>
שבת, במיוחד לשומרי השבת שבינינו, זה זמן אולטימטיבי לחשוב על רעיונות לפרויקטים.</p>
<h4>אם אין לכם רעיון פרויקט</h4>
<h5>כיוון אחד שאפשר לתקוף את זה ממנו זה מערכת המשתמשים.</h5>
<p>דמיינו שמשתמש נכנס ונרשם לאתר שלכם, ועכשיו הוא יכול לשמור נתונים כלשהם. מה זה יהיה?<br>
אולי מה יש לו במטבח? אולי סתם הודעות שהוא רוצה לשמור לעצמו? אולי הודעות שהוא רוצה לשלוח לאנשים?<br>
אולי הוא רוצה לשמור את החברים שלו ומתי הוא נפגש איתם לאחרונה? או את הפגישות שיש לו מחר?</p>
<h5>אפשר גם לתקוף את זה מכיוון הנתונים.</h5>
<p>חישבו על אובייקט אהוב עליכם במיוחד. נניח ספרים.<br>
אולי אנחנו בונים מערכת דירוג לספרים? או מערכת שמאפשרת לכותבים מתחילים לפרסם פרק ראשון בספר שלהם ולקבל עליו פידבקים?</p>
<h4>בנו ERD</h4>
<p>ודאו שיש לכם לפחות 3 טבלאות עם קשרים ביניהם.<br>
במצב האולטימטיבי, יהיו יותר מ־3 טבלאות, וכל הטבלאות שלכם יהיו עם קשרים ביניהן.</p>
<h3>חישבו CRUD</h3>
<p>בדקו שאתם צריכים את כל אחת מהפעולות הבאות במערכת שלכם:</p>
<ol>
<li>מחיקה של ישות</li>
<li>הוספה של ישות</li>
<li>עדכון של ישות</li>
<li>בדיקת הנתונים על ישות מסוימת</li>
</ol>
<p>נניח, במקרה של הספרים, אני לגמרי מצליח לדמיין מתי אני יכול למחוק, להוסיף, לעדכן ספר או תגובה.<br>
ה"בדיקה של הנתונים" תהיה כשאני רוצה להציג אותם למשתמש שנכנס לאתר.</p>
<p>יש לכם את כל זה? ברכותיי! יש לכם פרויקט.</p>
<h3>התחילו את המחברת על JOIN</h3>
<p>בראשון, עד שיפורסם הפוסט הבא, התחילו לקרוא את המחברת על JOIN.<br>
הצלחתם למצוא זמן לפני? שיחקתם אותה.<br>
המחברת הזו תעזור לכם להבין איך מתשאלים נתונים שפרושים על יותר ממחברת אחת.</p>
<hr>
<p>זהו. עד כאן לבינתיים.<br>
נתראה שוב בראשון.</p>
            <p><small>2 פוסטים - 2 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8485">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8485</link>
          <pubDate>Fri, 27 Nov 2020 11:34:04 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8485</guid>
          <source url="https://forums.pythonic.guru/t/topic/8485.rss">פרויקט יחד: עושים את הפרויקט בשלבים ועומדים בזמני ההגשה</source>
        </item>
        <item>
          <title>שבוע 14 – שאילתות JOIN</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>הורידו מ<a href="https://github.com/PythonFreeCourse/downloads/blob/master/week13.zip">כאן</a>, או עשו git clone/pull מענף sql ב־repo מחברות שלנו.</p>
<p>הפעם התוכן הוא על שאילתות <code>JOIN</code>.</p>
<p>המלצה ללמידה: פתחו את המחברת לצד הממשק להרצת השאילתות, ונסו לכתוב בעצמכם את כל השאילתות בממשק (בלי העתק־הדבק).</p>
<h3>איך מגישים?</h3>
<p>אפשר להגיש כמו שאתם רגילים – <code># Upload ID</code> בראש התא.<br>
דרך עדיפה שתגרום לכך שתהיה צביעה נכונה, היא לשמור את הפתרון על קובץ עם סיומת sql (נניח: <code>Upload 154.sql</code>).</p>
            <p><small>15 פוסטים - 8 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/14-join/8481">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/14-join/8481</link>
          <pubDate>Thu, 26 Nov 2020 15:52:49 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8481</guid>
          <source url="https://forums.pythonic.guru/t/14-join/8481.rss">שבוע 14 – שאילתות JOIN</source>
        </item>
        <item>
          <title>שבוע 14: תוכנית למידה</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>מאחר שככה"נ לא אספיק לכתוב את החומרים עבור כל הדברים שאני רוצה להספיק (יש הרבה מהם, לשמחתנו)<br>
ומכיוון שאני לא מעוניין לדחות את הקורס עוד יותר ו/או להחליט על זה שאנחנו מורידים חומר,<br>
זו מפת הלמידה שלכם לשבועיים הקרובים:</p>
<h3>
<a name="h-1" class="anchor" href="https://forums.pythonic.guru#h-1"></a>מפת למידה</h3>
<ol>
<li>שאילתות <code>JOIN</code> – צפויה לצאת מחברת ביומיים הקרובים.</li>
<li>תתי־שאילתות (<code>SUBQUERIES</code>) – תצא מחברת עד מוצ"ש.</li>
<li>שאילתות CRUD – כדאי ללמוד עצמאית. מומלץ להבין מה המונח אומר <a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete">מכאן</a>, ואז ללמוד על שאילתות ליצירת טבלאות והשפעה על שורות: CREATE, REMOVE, UPDATE, DELETE ו־INSERT מ<a href="https://sqlbolt.com/lesson/inserting_rows">כאן</a>, שיעורים 13–16 ו־18. לא מדובר על נושאים סבוכים אלא בעיקר טכניים, ואתם בקלות יכולים ללמוד אותם בעצמכם בלי להתקל בקשיים רציניים.</li>
<li>איך מתממשקים למסדי נתונים באמצעות פייתון? קראו על המודול <code>sqlite3</code> בתור התחלה, וודאו שאתם מצליחים להחזיר נתונים בעזרת שאילתות שהרצתם. ודאו שאתם מבינים את רעיון הסמן, ושאתם יכולים להחזיר תוצאה אחת או יותר.</li>
<li>ללמוד על ORM־ים – מה זה ORM? בחרו ונסו את Peewee (קל) או את SQLAlchemy (נפוץ ומלא בפיצ’רים). נסו להתחבר בעזרתם למסד הסרטים ולמצוא כמה שחקנים שיחקו בסרט שקיבל הכי הרבה הצבעות בשנת 2018.</li>
</ol>
<h3>
<a name="h-2" class="anchor" href="https://forums.pythonic.guru#h-2"></a>שידורים חיים</h3>
<p>אתן לכולם קצת זמן להתאפס על כל החומרים, ואעלה ביום שלישי (1/12) לשידור־חי ראשון לשבוע 14.<br>
נקבע שידורים נוספים לפי הצורך.</p>
<h3>
<a name="h-3" class="anchor" href="https://forums.pythonic.guru#h-3"></a>מטרות השבוע</h3>
<ol>
<li>לשלוט בביצוע JOIN, SUBQUERIES.</li>
<li>להבין את המונח CRUD בהקשרי תוכנה, ולדעת איך ליצור/לערוך טבלאות ומסדי נתונים.</li>
<li>לדעת לבנות אתר קצה לקצה, עם כל הרכיבים, כולל מסד נתונים.</li>
</ol>
<h3>
<a name="h-4" class="anchor" href="https://forums.pythonic.guru#h-4"></a>תרגילים</h3>
<ol>
<li>בחוברות ה־JOIN וה־Subqueries יופיעו תרגילים להגשה.</li>
<li>חשבו על אפליקציה משלכם, או על הפרויקט שלכם, ואיך לשלב בו מסד נתונים. תוכלו גם להחליט לבנות פרויקט אחר, נוסף, לתיק העבודות שלכם. בנו את הפרויקט עם מסד נתונים והעלו ל־Heroku.</li>
</ol>
<p>מי שלא מעוניין לחשוב על פרויקט משלו, יכול לבחור את אחד מהפרויקטים לדוגמה שמופיעים מטה.<br>
אפשר להדיין על רעיונות לפרויקטים בפורום או בקבוצת הטלגרם.</p>
<p>תאריך ההגשה הוא עד יום חמישי בעוד שבועיים, כלומר 10/12.</p>
<hr>
<h2>
<a name="h-5" class="anchor" href="https://forums.pythonic.guru#h-5"></a>פרויקטים (מכובדים) לדוגמה</h2>
<h3>
<a name="h-6" class="anchor" href="https://forums.pythonic.guru#h-6"></a>אתר חידות</h3>
<p>המשתמש מתחבר לאתר בעזרת שם משתמש וסיסמה, ומקבל רשימת חידות.<br>
לכל חידה שווי בנקודות, לפי רמת הקושי שלה.<br>
המשתמש יכול להיכנס לעמוד של החידה, שם יופיע לו ההסבר על החידה, שוויה בנקודות ותיבת טקסט.<br>
אם הוא יקליד בתיבת הטקסט את התשובה הנכונה לחידה, הוא יזכה בנקודות.</p>
<p>באתר תהיה “טבלת מנצחים” שתראה את האנשים שצברו הכי הרבה נקודות.</p>
<h3>
<a name="h-7" class="anchor" href="https://forums.pythonic.guru#h-7"></a>ארון הקוקטיילים</h3>
<p>צרו טבלה של בקבוקי אלכוהול פופולריים והמחיר שלהם.<br>
צרו טבלה נוספת של קוקטיילים פופולריים.</p>
<p>אפשרו למשתמשים להתחבר למערכת ולהוסיף/להוריד מהארון שלהם משקאות.<br>
כשילחצו על כפתור ייעודי, הם יוכלו לבדוק אילו קוקטיילים הם יכולים להכין בעזרת המשקאות שבארון המשקאות שלהם.</p>
<p>בונוס: הציגו גם את הבקבוקים שהכי משתלם להם לקנות (מחיר נמוך / יאפשר להכין הרבה קוקטיילים).</p>
<p>אפשר לעשות את הפרויקט מן הסתם גם עם מזון, או כל דבר אחר שנראה לכם מתאים.</p>
<h3>
<a name="wordle-8" class="anchor" href="https://forums.pythonic.guru#wordle-8"></a>חיקוי Wordle</h3>
<ol>
<li>בכל יום, בחרו מילה אקראית בת 5 אותיות.</li>
<li>המשתמשים שלכם צריכים להקליד באתר ניחוש – מה היא המילה היומית?</li>
<li>אם הניחוש שהכניסו הוא בן 5 אותיות, יוצג להם אילו אותיות הם ניחשו נכון: בצהוב יוצגו אותיות שקיימות במילה שהוגרלה וגם בניחוש, אך לא באותו מקום. בירוק יוצגו אותיות שקיימות במילה שהוגרלה וגם בניחוש, והן כן באותו מקום. באפור יוצגו אותיות שקיימות בניחוש אבל לא במילה.</li>
<li>למשתמש יש עד 6 נסיונות לנחש מה היא המילה שהוגרלה.</li>
<li>שמרו את הניסיונות וההצלחות של המשתמשים במסד הנתונים, כך שיוכלו לשחק בקלות מכל מקום. הציגו למשתמש עמוד משתמש עם סטטיסטיקות: כמה פעמים קלע תוך ניחוש אחד, שני ניחושים, שלושה וכך הלאה. הציגו לו גם מה ה¯Streak שלו כרגע (בכמה ימים רצופים ניצח) ומה ה¯Streak הכי גבוה שהגיע אליו.</li>
</ol>
<hr>
<p>אני ממליץ, עבור מי שמעוניין, להרחיב על pandas.<br>
זה מתקשר לשבוע שלנו מאוד וזה אחלה מודול להתעסקות עם נתונים.</p>
            <p><small>14 פוסטים - 7 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8471">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8471</link>
          <pubDate>Wed, 25 Nov 2020 02:56:13 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8471</guid>
          <source url="https://forums.pythonic.guru/t/topic/8471.rss">שבוע 14: תוכנית למידה</source>
        </item>
        <item>
          <title>איחוד שבועות 13–14</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>אהלן,</p>
<p>לאחר חשיבה מחודשת בנוגע לסילבוס, המשכיות החומרים והתכנסות החומרים לזמנים סבירים, החלטתי לבצע שינויים בלוחות הזמנים ובחומרים של שבועות 13–14.</p>
<ol>
<li>כדי לאפשר עבורכם גמישות, מועד ההגשה של שבוע 13 ידחה לנוחיותכם ביומיים נוספים. מועד ההגשה החדש הוא ה־24/11 בשעה 19:00. נא תכננו את הזמן שלכם בהתאם.</li>
<li>במועד סיום ההגשה ישוחררו החומרים עבור שבוע 14. בשבוע זה נלמד שימוש במסדי נתונים באפליקציות. הם יכללו מחברת אחת שמשלימה חומרים שהיו אמורים להיכלל בשבוע 13 ולא נכנסו בגלל מגבלת הזמן.</li>
<li>סיום ההגשה של שבוע 14 יהיה שבועיים אחרי פרסומו (8/12).</li>
</ol>
<p>אני כמובן זמין לשאלות נוספות, הערות והצעות.<br>
בהצלחה!</p>
            <p><small>7 פוסטים - 4 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/13-14/8458">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/13-14/8458</link>
          <pubDate>Thu, 19 Nov 2020 16:47:08 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8458</guid>
          <source url="https://forums.pythonic.guru/t/13-14/8458.rss">איחוד שבועות 13–14</source>
        </item>
        <item>
          <title>שבוע 13 – יום 4: נרמול מסדי נתונים</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>הורידו מ<a href="https://github.com/PythonFreeCourse/downloads/blob/master/week13.zip">כאן</a>, או עשו git clone/pull מענף sql ב־repo מחברות שלנו.</p>
<p>הפעם התוכן הוא על תכנון מסד נתונים כך שיהיה גמיש להרחבות עתידיות, יאפשר אחסון ושליפה בצורה יעילה ונוחה ויחסוך תקלות בזמן התפעול שלו.</p>
<p>המלצה ללמידה: פתחו את המחברת לצד הממשק להרצת השאילתות, ונסו לכתוב בעצמכם את כל השאילתות בממשק (בלי העתק־הדבק).</p>
            <p><small>3 פוסטים - 2 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/13-4/8456">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/13-4/8456</link>
          <pubDate>Wed, 18 Nov 2020 15:49:11 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8456</guid>
          <source url="https://forums.pythonic.guru/t/13-4/8456.rss">שבוע 13 – יום 4: נרמול מסדי נתונים</source>
        </item>
        <item>
          <title>שבוע 13 – יום 3: פונקציות אגרגטיביות והפסוקיות GROUP BY ו־HAVING</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>הורידו מ<a href="https://github.com/PythonFreeCourse/downloads/blob/master/week13.zip">כאן </a>, או עשו git clone/pull מענף sql ב־repo מחברות שלנו.</p>
<p>הפעם התוכן הוא על פונקציות אגרגטיביות והפסוקיות <code>GROUP BY</code> ו־<code>HAVING</code>.</p>
<p>המלצה ללמידה: פתחו את המחברת לצד הממשק להרצת השאילתות, ונסו לכתוב בעצמכם את כל השאילתות בממשק (בלי העתק־הדבק).</p>
<h3>איך מגישים?</h3>
<p>אפשר להגיש כמו שאתם רגילים – <code># Upload ID</code> בראש התא.<br>
דרך עדיפה שתגרום לכך שתהיה צביעה נכונה, היא לשמור את הפתרון על קובץ עם סיומת sql (נניח: <code>Upload 154.sql</code>).</p>
            <p><small>4 פוסטים - 3 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/13-3-group-by-having/8438">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/13-3-group-by-having/8438</link>
          <pubDate>Tue, 10 Nov 2020 10:09:52 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8438</guid>
          <source url="https://forums.pythonic.guru/t/13-3-group-by-having/8438.rss">שבוע 13 – יום 3: פונקציות אגרגטיביות והפסוקיות GROUP BY ו־HAVING</source>
        </item>
        <item>
          <title>שבוע 13 – יום 1: מסדי נתונים ושאילתות בסיסיות</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h2>שבוע 13</h2>
<h3>יום 1</h3>
<p>הורידו מ<a href="https://github.com/PythonFreeCourse/downloads/blob/master/week13.zip">כאן</a>.</p>
<p>המלצה ללמידה: פתחו את המחברת לצד הממשק להרצת השאילתות, ונסו לכתוב בעצמכם את כל השאילתות בממשק (בלי העתק־הדבק).</p>
<p>תודה לרונית פלדמן שייעצה ועיצבה חלק מחומרי הלמידה השבוע.</p>
<p>בהצלחה!</p>
<hr>
<h3>איך מגישים?</h3>
<p>אפשר להגיש כמו שאתם רגילים – <code># Upload ID</code> בראש התא.<br>
דרך עדיפה שתגרום לכך שתהיה צביעה נכונה, היא לשמור את הפתרון על קובץ עם סיומת sql (נניח: <code>Upload 154.sql</code>).</p>
            <p><small>12 פוסטים - 7 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/13-1/8410">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/13-1/8410</link>
          <pubDate>Sat, 31 Oct 2020 16:07:10 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8410</guid>
          <source url="https://forums.pythonic.guru/t/13-1/8410.rss">שבוע 13 – יום 1: מסדי נתונים ושאילתות בסיסיות</source>
        </item>
        <item>
          <title>אזהרה חמורה: לא להעלות API Key ל־GitHub!</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <p>שימו לב, הערה חשובה מאוד: ה־API Key שקול לסיסמה, והרבה פעמים אפילו קצת יותר רגיש – הוא מכיל גישה לחשבון שלכם ולפעמים מאפשר לעקוף הגנה מרובת שלבים.</p>
<p>לכן:</p>
<ol>
<li>לא משתפים API Key עם אף אחד.</li>
<li>לא עושים commit־ים לקוד עם API Key, ובטח שלא מעלים אותו לשירותי Git כמו GitHub/GitLab.</li>
<li>לא מצלמים מסך עם API Keys בתוכו.</li>
<li>לא נותנים לאף אחד את ה־API Key שלכם, גם אם זה איש שירות מטעם החברה והוא מבקש אותו.</li>
</ol>
<p>למה?</p>
<ol>
<li>יש דברים שסורקים את API Keys באינטרנט כל הזמן כדי להשתמש בהם.</li>
<li>אפשר בעזרת קצת מניפולציות לפרוץ לכם לחשבון, ובמקרים חריגים גם לגלות את הסיסמה שלכם ופרטים נוספים עליכם.</li>
</ol>
<p>אז איך כן?</p>
<ol>
<li>משתמשים במשתנה סביבה, שמים בו את הערך ומשיגים את הערך בעזרת os.getenv.</li>
<li>מוודאים כמה וכמה פעמים לפני כל commit שאין את ה־API Key בחשבון.</li>
<li>המקום היחיד שבו אמור לשבת ה־API Key: אצלכם, ובשרת שבו מאוחסן האתר.</li>
</ol>
<p>מה עושים אם בטעות כבר העלתי API Key שלי לרשת?</p>
<ol>
<li>למחוק אותו מה־repo לא יעזור. אפשר לראות היסטוריית commit־ים ובסופו של דבר יגיעו אליו.</li>
<li>כנסו לשרות, וחפשו כפתור של revoke API key.</li>
<li>שנו את הסיסמה לחשבון.</li>
<li>נקו את הקוד שלכם מהתייחסות ל־API Key באופן יסודי.</li>
</ol>
<p>בהצלחה!</p>
            <p><small>9 פוסטים - 5 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/api-key-github/8388">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/api-key-github/8388</link>
          <pubDate>Sat, 24 Oct 2020 01:40:20 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8388</guid>
          <source url="https://forums.pythonic.guru/t/api-key-github/8388.rss">אזהרה חמורה: לא להעלות API Key ל־GitHub!</source>
        </item>
        <item>
          <title>הנחיות להגשת התרגילים: שבוע 12</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <ol>
<li>בתרגיל הראשון, Mockup – <a href="https://github.com/PythonFreeCourse/lms/pull/252">הוספנו</a> אפשרות להעלות קובצי תמונה. העלו קובץ תמונה, או zip שכולל כמה קובצי תמונות.</li>
<li>בתרגיל השני – אנא כללו ב־html שתעלו הערה, ובה הקישור לאתר שלכם ב־Netlify.</li>
<li>בתרגיל השלישי – צרפו קובץ בשם link.txt שבו יש קישור לאתר ה־Heroku שלכם. אם בחרתם סביבה כמו AWS, ציינו את זה בבקשה בקובץ.</li>
</ol>
            <p><small>13 פוסטים - 8 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8362">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8362</link>
          <pubDate>Tue, 20 Oct 2020 15:23:53 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8362</guid>
          <source url="https://forums.pythonic.guru/t/topic/8362.rss">הנחיות להגשת התרגילים: שבוע 12</source>
        </item>
        <item>
          <title>שבוע 12 – יום 5: סביבה וירטואלית, Jinja2, העלאה ל־Heroku</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h2>מה היא סביבה וירטואלית?</h2>
<p>נניח שאתם מתכנתים כמה וכמה פרויקטים על אותו מחשב.</p>
<p>פרויקט אחד הוא של העבודה, בו אתם עורכים קוד שנכתב לפני 5 שנים ומשתמש במודולים ישנים יחסית.<br>
אחד המודולים, Flask, נניח, הוא בגרסה ישנה מאוד (נניח, גרסה 0.12), ושדרוג שלו ישבור את המערכת.</p>
<p>הפרויקט השני הוא מערכת התרגילים של הקורס, שמשתמש בטכנולוגיה חדשה ונוצצת.<br>
בין המודולים שמככּבים בו נמצא Flask בגרסתו החדשה ביותר – גרסה 1.1.</p>
<p>בפרויקט שלישי משל עצמכם אתם משתמשים במודולים אחרים, אבל חלק מהמודולים שבהם אתם משתמשים, נסמכים בעצמם על מודולים אחרים.<br>
בין המודולים, ישנו גם מודול A שבעצמו נסמך מודול B – הרי הוא Flask בגרסה 1.0.</p>
<p>כשאתם מנסים לעבור בין פרויקטים אתם מגלים שגרסה 0.12 של Flask אינה תואמת עם גרסה 1.1,<br>
וגרסה 1.1 מתנהגת מעט שונה מגרסה 1.0.</p>
<p>מובן שישנה בעיה: לא פרקטי להסיר את Flask ולהתקין את הגרסה הרצויה כל פעם שנעבור לעבוד על פרויקט אחר.</p>
<h3>הפתרון? סביבות וירטואליות!</h3>
<p>סביבה וירטואלית מאפשרת לנו להגדיר מעין קופסה מבודדת שבה רץ פייתון בלי כל המודולים שהתקנו על המחשב.<br>
אם נרצה, נוכל להתקין עבור המערכת שאנחנו כותבים בעבודה סביבה וירטואלית (דמיינו חדר מבו‏ּדד וסטרילי) שבה מותקנים <em>רק</em> המודולים ששייכים לפרויקט שלנו.<br>
כשנרצה לעבור לפרויקט אחר, נניח, לזה של מערכת הגשת התרגילים בקורס – נוכל להגדיר עבורו סביבה וירטואלית משלו, שבה יהיו מותקנים <em>רק</em> המודולים שקשורים למערכת הגשת התרגילים בקורס.</p>
<p>אלו שתי סביבות שונות, נפרדות אחת מהשנייה, שלא יודעות על קיומן אחת של השנייה, או על המודולים שהותקנו אחת אצל השנייה.<br>
זה מאפשר לנו (ולכל מי שיעבוד על המערכת שלנו) להפעיל כל אחת מהסביבות בנפרד, ולעבוד עליהן באופן בלתי תלוי.</p>
<h3>איך עושים את זה?</h3>
<p>כל מה שצריך כדי <em>ליצור</em> סביבה וירטואלית, זה להריץ בשורת הפקודה:<br>
<code>python -m venv PROJECT_NAME</code></p>
<p>הפקודה הזו תיצור תיקייה חדשה בשם PROJECT_NAME, שבתוכה יהיו תיקיות וקבצים.<br>
התיקיות והקבצים הללו הם מה שמאפשר לסביבה הווירטואלית לפעול.<br>
מרובם אתם רוצים להתעלם בשלב הזה, אבל אתם עדיין צריכים להיכנס לתוך הסביבה הווירטואלית כדי שתפעל.</p>
<p>כדי <em>להפעיל</em> את הסביבה הווירטואלית, אם כך, תצטרכו לרשום:</p>
<ul>
<li>בווינדוס: <code>PROJECT_NAME\Scripts\activate.bat</code>
</li>
<li>ב־MacOS/בלינוקס: <code>source PROJECT_NAME/bin/activate</code>
</li>
</ul>
<p>וזהו. כעת אתם בתוך הסביבה הווירטואלית.<br>
ליד שורת הפקודה שלכם אמורה להתווסף המילה PROJECT_NAME, כדי להזכיר לכם שזה המצב.<br>
תוכלו לצאת מהסביבה הווירטואלית בכל זמן אם תכתבו <code>deactivate</code>.</p>
<p>הסביבה הווירטואלית תקפה רק בחלון שבו הפעלתם אותה.<br>
אם תריצו פקודות בחלון אחר אתם לא תפעלו תחת הסביבה הווירטואלית ותשפיעו על גרסת הפייתון “הראשית” שמותקנת אצלכם במחשב.</p>
<p>כדי להתקין מודול חדש תוכלו להשתמש ב־pip, כרגיל.<br>
שימו לב שהתקנת המודול תתבצע בתוך הסביבה הווירטואלית ולא תשפיע על גרסת הפייתון הראשית שמותקנת אצלכם במחשב.<br>
כדי לשמור את כל ההתקנות שביצעתם בסביבה וירטואלית מסוימת ולשלוח אותם לחבריכם שיוכלו להתקין אותן בקלות, כתבו:</p>
<blockquote>
<p><code>pip freeze &gt; requirements.txt</code></p>
</blockquote>
<p>הפקודה הזו תיצור קובץ בשם requirements.txt, שמכיל את כל החבילות שמותקנות אצלכם בסביבה.<br>
אם תכתבו אותו כשאתם מחוץ לסביבה הווירטואלית, ישפכו לקובץ הזה כל החבילות שמותקנות אצלכם על הגרסה הראשית של פייתון, ולא דווקא מותקנות בסביבה הווירטואלית. משמע: חשוב לוודא שאתם בתוך הסביבה הווירטואלית שלכם לפני שהרצתם pip freeze.</p>
<p>טיפ: ודאו ש־requirements.txt נמצא אצלכם בתיקייה הראשית של הפרויקט. זה הנוהג, ויש אפילו שירותים שיאפשרו לכם להעלות חבילה של פייתון וידרשו שהקובץ הזה ישב שם.</p>
<p>כדי להתקין את כל החבילות שנמצאות בקובץ requirements.txt שקיבלתם מחבר או בתוך פרויקט כלשהו, היכנסו לסביבה הווירטואלית וכתבו:</p>
<blockquote>
<p><code>pip install -r requirements.txt</code></p>
</blockquote>
<p>זהו. אתם יודעים להשתמש בסביבות וירטואליות <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<h3>גרסאות נוספות</h3>
<p>נוסף על השיטה שהוצגה פה פה, יש שיטות נוספות ליצור סביבות וירטואליות.<br>
(קריאת העשרה, ממילא אין צורך לזכור את כל זה ותתקלו בדברים האלו ככל שתעבדו יותר עם פייתון)</p>
<ol>
<li>המודול virtualenv – אותו רעיון, אבל לא חלק מהמודולים שבאים עם פייתון ויש לו <a href="https://virtualenv.pypa.io/en/latest/">יותר פיצ’רים</a>.</li>
<li>המודול conda – שילוב מעניין בין מנהל חבילות לסביבה וירטואלית. לא בשימוש נרחב, אבל נוח יחסית. מאפשר גם לבחור את גרסת הפייתון שרוצים להשתמש בה, אם אתם עובדים על פרויקטים שתומכים בגרסאות פייתון שונות.</li>
<li>המודול pipenv הוא מודול פופולרי מאוד, שבדומה ל־conda עשיר בפיצ’רים לניהול סביבה וחבילות. מעבר לתפקידה של הפקודה <code>pipenv</code> שיוצרת סביבה וירטואלית, היא גם יודעת לנהל גם את החבילות שמותקנות באותה סביבה. הטריק של pipenv הוא ליצור קובץ נפרד בשם Pipfile.lock שבו יש את גרסאות החבילות שהותקנו, ללא התלויות שלהם (יכולים לחשוב על היתרונות והחסרונות? פתחו על זה דיון בפורום).</li>
<li>המודול poetry הוא מודול שמתחיל לתפוס תאוצה בשנה האחרונה. הוא דומה ל־pipenv אבל תומך בתקנים החדשים ביותר של השפה, ונראה שהוא עובד די טוב בפועל.</li>
</ol>
<p>הקהילה די מפוצלת בנוגע לשיטת ניהול התלויות והסביבה של הפרויקט, כך שאתם מוזמנים לבחור בדרך המועדפת עליכם.<br>
אשאיר את קריאת ההרחבה וההשוואה על כל אחד מהמודולים הללו עבורכם.</p>
<h2>תבניות לאתר: Jinja2</h2>
<p>כשאנחנו כותבים קוד לאתר שלנו קצה־לקצה, אנחנו כבר יודעים שנצטרך להשתמש לא מעט ב־HTML.<br>
הצרה היא שכשאנחנו רוצים לשלב את ה־HTML הזה עם פייתון, פעמים רבות נצטרך להכניס לדף מידע באופן דינאמי. למשל:</p>
<ol>
<li>אם קיבלנו מ־API חיצוני רשימת עצמים (מזג האוויר בשבוע הקרוב, העמלות של השקל מול הדולר בשבוע האחרון, רשימת כל הפוקימונים שקיימים) ואנחנו רוצים לשלב אותם ב־HTML באמצעות לולאה.</li>
<li>אם אנחנו רוצים להציג חלק מסוים בדף רק במקרים מסוימים. לדוגמה, במערכת התרגילים מוצגת בדף התרגיל האפשרות להוסיף הערה אך ורק אם המשתמש הוא המנהל.</li>
<li>אם אנחנו רוצים להציג בכל הדפים תפריט, אבל לא רוצים לשכפל את הקוד כשאנחנו יוצרים דף חדש עבור המערכת.</li>
</ol>
<p>לצורך כך סביבות שמתעסקות באתרי אינטרנט לרוב מנגישות למתכנתים דבר שנקרא Web template engine.<br>
הרעיון של Web template engines הוא לאפשר למתכנתים לכתוב HTML, ולהוסיף לו Syntax מוסכם מראש שיאפשר למתכנתים להטמיע בתוך אותו HTML תוכן דינאמי.</p>
<p>הנה, לדוגמה, קוד ב־Jinja2 (שנלקח <a href="https://palletsprojects.com/p/jinja/">מכאן</a>). נניח שלקובץ קוראים user_list.html:</p>
<pre><code class="lang-auto">{% extends "layout.html" %}
{% block body %}
  &lt;ul&gt;
  {% for user in users %}
    &lt;li&gt;&lt;a href="{{ user.url }}"&gt;{{ user.username }}&lt;/a&gt;&lt;/li&gt;
  {% endfor %}
  &lt;/ul&gt;
{% endblock %}
</code></pre>
<p>בקוד הזה השורה הראשונה אומרת שה־HTML במסמך הזה הולך להיות “מודבק” בתוך מסמך אחר, שנקרא layout.html.<br>
התוכן שבא אחר־כך מורה על ul (רשימה לא מסודרת של תבליטים) שמכילה תבליט אחד עבור כל משתמש במשתנה user.<br>
עבור כל user מתוך רשימת users, יופיע קישור שיילקח מתוך user.url, והמלל של הקישור יהיה user.username.</p>
<p>שימו לב לשילוב המעניין בין תחביר פייתוני לבין תחביר של HTML. זו היכולת המעניינת (והמועילה) שאנחנו מקבלים ב־Web template engines בכלל, וב־Jinja2 בפרט.</p>
<p>התשתית שבה אנחנו משתמשים לבניית אתרים, Flask, משתמשת ב־Jinja2 בתור ה־Web template engine שמגיע יחד איתה.<br>
כל קובץ שיהיה בתוך תיקיית templates בפרויקט שלנו נחשב ל"template", ו־Flask תדע לטעון אותו באמצעות הפונקציה render_template.<br>
אם נניח נרצה לטעון את ה־template שנקרא <code>user_list.html</code> כאשר משתמש נכנס לעמוד <code>/all_users</code>, נכתוב את הקוד הבא:</p>
<pre><code class="lang-auto">@app.route('/all_users')
def login():
    registered_users = get_all_users()  # נניח שהפונקציה הזו מחזירה את רשימת המשתמשים במערכת
    render_template('user_list.html', users=registered_users)
</code></pre>
<p>ל־Jinja2 יש הרבה פיצ’רים וטריקים נחמדים.<br>
אתם יכולים לקרוא עליהם ב<a href="https://jinja.palletsprojects.com/en/2.11.x/">תיעוד</a>, או לראות <a href="https://github.com/PythonFreeCourse/lms/tree/master/lms/templates">דוגמאות</a> בקוד המקור של מערכת התרגילים.</p>
<h2>אחסון באינטרנט</h2>
<p>כשאנחנו רוצים להעלות אתר דינאמי שבנינו לאינטרנט, חשוב לנו שיקרו כמה דברים:</p>
<ol>
<li>שהוא יהיה נגיש מכל מקום בעולם, והניהול שלו יהיה נגיש מכל מקום בעולם.</li>
<li>שהגישה אליו תהיה מהירה יחסית – זה אומר שהחיבור של המקום שמאחסן את האתר לאינטרנט יהיה טוב מאוד, ואולי אפילו הגורם המאחסן ישתמש בכל מני <a href="https://en.wikipedia.org/wiki/Content_delivery_network">טריקים</a> כדי להמהיר את הגישה לאתר שלנו.</li>
<li>שיאפשר לנו לשלוט על המחשב שעליו מאוחסן האתר שלנו כאילו זה היה המחשב שלנו.</li>
</ol>
<p>ישנם מספר שירותים שעונים על הדרישות האלו, ומוגדרים כפלטפורמה נוחה להעלות אליה את אתרי האינטרנט שתכנתנו באמצעות Flask (או באמצעות כל מודול/שפת תכנות אחרים).</p>
<h3>השרת</h3>
<p>למרות ש־Flask יודע לקבל בקשות HTTP, זו לא המומחיות שלו והוא מבצע את זה בצורה איטית וגרועה יחסית.<br>
Flask מיועד בעיקר לספק לנו את הסביבה לפיתוח האתר, ופחות כרכיב שאחראי להיות השרת שמטפל בפניות HTTP.</p>
<p>לעומתו, ישנן תוכנות שייעודן לטפל בבקשות HTTP במהירות וביעילות. הן נקראות “שרתי אינטרנט” או “שרתי HTTP”, ולפעמים הן מגיעות עם פיצ’רים חשובים, כמו ניהול עומסים, תמיכה ב־IPv6, ניהול זיכרון מטמון, אפשרות להוספת headers לתשובות ששולח השרת, ניהול הקונפיגורציה של התקשורת המאובטחת (HTTPS) וכן הלאה.</p>
<p>שרתי האינטרנט המוכרים ביותר כיום הם nginx, Apache, lighttpd ו־IIS.<br>
לצרכים שלנו הבחירה בינו לבין Apache או לבין lighttpd היא די שרירותית.</p>
<p>בשביל להשלים את הפאזל, נצטרך רכיב שידע לתרגם את מה שמגיע לשרת האינטרנט ל־Flask, ואת מה שיוצא מ־Flask לשרת האינטרנט. הרכיב הזה נקרא WSGI, או <a href="https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface">Web Server Gateway Interface</a>. התוכנה שנבחר לצורך הזה נקראת Gunicorn.</p>
<h4>לסיכום:</h4>
<ol>
<li>יש לנו פייתון שמריץ Flask, שהוא מודול בפייתון שיודע לקבל בקשות לפי מיקום הבקשה (<code>app.route</code>) ולפיהן להחזיר תשובות.</li>
<li>בד"כ נרצה לטעון בעזרתו templates שכתובים ב־Jinja2.</li>
<li>את הבקשות מהאינטרנט תקבל תוכנה שזה הייעוד שלה ובזה היא טובה: שרת אינטרנט, כמו nginx או Apache.</li>
<li>בין שרת האינטרנט ל־Flask יישב רכיב שיודע לתרגם דברים אחד לשני (WSGI). בחרנו באחד שנקרא Gunicorn.</li>
</ol>
<h3>ספק האחסון</h3>
<p>כיום יש תחרות גדולה בקרב החברות הגדולות על מי “יזכה” לארח את האתר שלנו באינטרנט. בין החברות הגדולות שמציעות שירותים כאלו נמצאות Amazon, Goolge ו־Microsoft עם השירותים AWS, GCP ו־Azure (בהתאמה). החברות האלו מנסות לצוד בעיקר לקוחות ענק שישלמו להם אלפי דולרים ועד מיליוני דולרים בחודש על השכרת שרתים, אבל כדגי הרקק שאנחנו – רובן יציעו לנו תוכניות חינמיות משתלמות, לפחות לשנה בחינם.</p>
<p>ספק האחסון שנסקור הוא Heroku, שדואג לפשט את כל תהליך העלאת האתר. כדי להשתמש בו, תצטרכו <a href="https://signup.heroku.com/signup/dc">לפתוח חשבון</a> ב־Heroku.</p>
<p>צרו במחשב שלכם סביבה וירטואלית, כמו שלמדנו בתחילת היום. לצורך הדוגמה, נקרא לה heroku:</p>
<blockquote>
<p><code>python -m venv heroku</code></p>
</blockquote>
<p>הפעילו את הסביבה הוירטואלית באמצעות <code>source heroku/bin/activate</code> או <code>heroku\Scripts\activate.bat</code>, בתלות במערכת ההפעלה שלכם.<br>
לאחר מכן התקינו את flask ואת gunicorn באמצעות pip.</p>
<p>צרו קובץ חדש ששמו app.py, וכיתבו בו קוד בסיסי שמשתמש ב־Flask:</p>
<pre><code class="lang-python">from flask import Flask, request, jsonify
app = Flask(__name__)

@app.route('/')
def index():
    return "&lt;h1&gt;Welcome to our server !!&lt;/h1&gt;"

if __name__ == '__main__':
    app.run(threaded=True, port=5000)
</code></pre>
<p>הריצו flask run, היכנסו ל־<a href="http://localhost:5000">http://localhost:5000</a> ובדקו שהסביבה שלכם עובדת.</p>
<p>צרו את קובץ requirements.txt, שמכיל את כל התלויות ש־Heroku צריכים להכיר:</p>
<blockquote>
<p><code>pip freeze &gt; requirements.txt</code></p>
</blockquote>
<p>צרו קובץ נוסף בשם Procfile (ללא סיומת).<br>
הקובץ הזה הוא קובץ מיוחד עבור Heroku, שמגדיר עבור Heroku אילו פקודות להריץ בכל מני מקרים.<br>
אנחנו נכתוב בתוכו רק את השורה:</p>
<blockquote>
<p><code>web: gunicorn app:app</code></p>
</blockquote>
<p>שאומרת: ברגע שמגיעה בקשת אינטרנט, תפנה אותה ל־gunicorn.<br>
(מבולבלים? זה בסדר. Heroku דואג להרים Web server מאחורי הקלעים כדי שלא נצטרך להתעסק בזה. הוא יקבל את הבקשות ל־Web server שיעביר אותם ל־gunicorn).</p>
<p>עכשיו צרו git שינהל את כל הקוד שכתבתם – זה הדבר המנומס לעשות.<br>
כתבו <code>git init .</code> בתיקייה הרלוונטית, ואז <code>git add -A</code> ו־<code>git commit -a -m "First commit"</code>.</p>
<p>אנחנו כמעט מוכנים לשיגור. התחברו ל־Heroku, ולחצו על New -&gt; Create new app.<br>
צרו אפליקציה בשם שמתחשק לכם (שמרו אותו), וכשתגיעו לעמוד הניהול יהיו לכם שתי אפשרויות:</p>
<ol>
<li>העלאה באמצעות GitHub – אם העלתם את האפליקציה שלכם לגיטהאב זה מעולה, ותוכלו לעשות את זה ביתר קלות מכאן.</li>
<li>העלאה באמצעות Heroku CLI – תצטרכו להתקין לפי המדריך <a href="https://devcenter.heroku.com/articles/heroku-command-line">כאן</a>. אחרי שהתקנתם, כתבו <code>heroku login</code> בחלון חדש של שורת פקודה. אחרי שהתחברתם היכנסו לפרויקט שלכם, הפעילו את הסביבה הוירטואלית, כיתבו <code>heroku git:remote -a PROJECT_NAME</code> ואז <code>git push heroku master</code>.</li>
</ol>
<p>עכשיו אתם אמורים להיות מסוגלים לראות את האתר שלכם ב־ <code>https://PROJECT_NAME.herokuapp.com/</code>. מזל טוב!</p>
            <p><small>26 פוסטים - 12 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/12-5-jinja2-heroku/8361">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/12-5-jinja2-heroku/8361</link>
          <pubDate>Tue, 20 Oct 2020 01:00:14 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8361</guid>
          <source url="https://forums.pythonic.guru/t/12-5-jinja2-heroku/8361.rss">שבוע 12 – יום 5: סביבה וירטואלית, Jinja2, העלאה ל־Heroku</source>
        </item>
        <item>
          <title>שבוע 12, יום 4: סִדרוּת, API</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h2>אדמיניסטרטיבי</h2>
<p>היום בשעה 18:30 אעלה לשידור חי של כשעתיים, בו אענה לשאלות שנצברו אצלכם.<br>
ביום שלישי הקרוב (20/10) אעלה בשעה 20:00 ואראה כיצד מקימים אתר קצה לקצה.</p>
<h2>סִדרוּת (Serialization)</h2>
<p>בקצרה, סִדרוּת (ביום־יום אומרים “סריאליזציה”), הוא תהליך של העברת מבני נתונים (כמו מילון או רשימה) לצורה בה יהיה אפשר לאחסן את מבני הנתונים בקלות, או להעביר אותו ליעד אחר.<br>
לרוב הקלט של תהליך הסריאליזציה יהיה מבנה נתונים, והפלט יהיה טקסט כלשהו שמייצג את את אותו מבנה נתונים.<br>
בדה־סריאליזציה (deserialization) עושים את התהליך ההפוך, שבו הקלט הוא לרוב טקסט, והפלט הוא לרוב מבנה נתונים.</p>
<p>שימושים נפוצים לסריאליזציה:</p>
<ol>
<li>אם נצטרך להעביר בין שני מחשבים מילון ששמור בפייתון, נוכל בקלות לעשות לו סריאליזציה במחשב בו הוא שמור ולשלוח אותו למחשב השני. המחשב השני יעשה דה־סריאליזציה, ובכך יוכל להשתמש במילון.</li>
<li>אם נרצה לשמור על המחשב את אותו מילון, נוכל להמיר אותו לטקסט בעזרת סריאליזציה ולשמור אותו בקלות על קובץ.</li>
</ol>
<h3>על אודות JSON</h3>
<p>ישנם פרוטוקולים שונים לסריאליזציה, המוכר שבהם הוא JSON (קיצור ל־JavaScript Object Notation).<br>
היתרון הגדול של צורות סריאליזציה מוכרות במיוחד הוא שהן נתמכות בכל שפה שנגיע אליה. זה המצב עם JSON.<br>
בואו נמיר tuple של מילונים בפייתון ל־JSON, ונהפוך אותה למערך של אובייקטים (המקבילה ה־JavaScript־ית) ב־JavaScript:</p>
<pre><code class="lang-auto">import json
people = ({'name': 'Hummus', 'favorite_dish': 'Moshe'}, {'name': 'Guyava', 'favorite_dish': 'Danna'})
print(json.dumps(people))
</code></pre>
<p>איך יראה הפלט? דומה להחריד:</p>
<blockquote>
<p><code>[{"name": "Hummus", "favorite_dish": "Moshe"}, {"name": "Guyava", "favorite_dish": "Danna"}]</code></p>
</blockquote>
<p>ננסה להמיר חזרה ל־Python, רק כדי לראות מה קרה כאן:</p>
<pre><code class="lang-python">json.loads('[{"name": "Hummus", "favorite_dish": "Moshe"}, {"name": "Guyava", "favorite_dish": "Danna"}]')
</code></pre>
<p>קיבלנו:</p>
<pre><code class="lang-auto">[{'name': 'Hummus', 'favorite_dish': 'Moshe'},
 {'name': 'Guyava', 'favorite_dish': 'Danna'}]
</code></pre>
<p>שימו לב שאיבדנו את העובדה שמבנה הנתונים החיצוני היה tuple.<br>
זה קורה כיוון שב־JSON אין מבנה נתונים שקול בדיוק ל־tuple, ולכן סריאליזציה של tuple־ים ממירה אותם לרשימות. זה בד"כ לא משהו שמשפיע עלינו באמת, אבל זה כן משהו לקחת בחשבון כשעושים סריאליזציה באמצעות JSON.</p>
<p>בנוסף, פייתון דאגה למיר את התו <code>'</code> לתו <code>"</code>, כדי לעמוד בתקן של JSON.</p>
<p>אם נרצה לטעון באמצעות JavaScript את ה־JSON, נוכל לכתוב:</p>
<pre><code class="lang-javascript">JSON.parse('[{"name": "Hummus", "favorite_dish": "Moshe"}, {"name": "Guyava", "favorite_dish": "Danna"}]')
</code></pre>
<p>חשוב לזכור ש־JSON נתמכת כמעט בכל פלטפורמה שתגיעו אליה – וזה החוזק העיקרי שלה.</p>
<p>ב־Go, לדוגמה, תוכלו לכתוב:</p>
<pre><code class="lang-auto">json.Unmarshal([]byte(myJsonString), &amp;myStoredVariable)
</code></pre>
<p>וב־Java תוכלו לכתוב:</p>
<pre><code class="lang-auto">FileReader reader = new FileReader(filename);
JSONParser jsonParser = new JSONParser();
return jsonParser.parse(reader);
</code></pre>
<h3>על אודות pickle</h3>
<p>כפי שראינו, החיסרון המשמעותי ביותר של JSON היא איבוד מידע. JSON לא מבטיח לשמור לכם על טיפוסי הנתונים שהמרתם, ואפילו יסרב להמיר אובייקטים מורכבים (לדוגמה: רשימת תאריכים מטיפוס datetime).</p>
<p>כדי להתמודד עם הבעיה, פייתון מציעה את המודול הסטנדרטי pickle שמאפשר לעשות סריאליזציה לכל אובייקט פייתון שהוא. החיסרון הוא, כמובן, שמעט מאוד שפות תכנות אחרות תומכות ב־pickle ישירות מהקופסה.</p>
<p>נראה דוגמה ליצירת pickle:</p>
<pre><code class="lang-auto">import datetime
import pickle

pickle.dumps(datetime.datetime.now())
</code></pre>
<p>תוצאה:</p>
<blockquote>
<p>b’\x80\x04\x95*\x00\x00\x00\x00\x00\x00\x00\x8c\x08datetime\x94\x8c\x08datetime\x94\x93\x94C\n\x07\xe4\n\x12\x073 \x04\x02\xa1\x94\x85\x94R\x94.’</p>
</blockquote>
<h3>תחביר</h3>
<p>השימוש ב־pickle וב־json בפייתון זהה למדי – מייבאים את הספרייה הרלוונטית, ומשתמשים באחת מארבע פעולות שזמינות בספרייה:</p>
<ol>
<li>הפעולה <code>load</code> – מאפשרת לטעון מחרוזת מקובץ ולהעביר אותה דה-סריאליזציה.</li>
<li>הפעולה <code>loads</code> – מאפשרת לטעון מחרוזת רגילה ולהעביר אותה דה-סריאליזציה.</li>
<li>הפעולה <code>dump</code> – מאפשרת לשמור טיפוס נתונים על קובץ אחרי שעבר סריאליזציה.</li>
<li>הפעולה <code>dumps</code> – מאפשרת לשמור טיפוס נתונים כמשתנה/לקבל אותו כערך אחרי שעבר סריאליזציה.</li>
</ol>
<h3>שימוש בפרויקט שלנו</h3>
<p>ננסה להבין, לדוגמה, כיצד מערכת התרגילים מציגה לכם את ההערות שקיבלתם על התרגילים שלכם.</p>
<p>כדי לעשות את זה נלחץ F12 בדף התרגיל, נעבור ללשונית Networks ונלחץ על Refresh.<br>
בין הבקשות, נוכל לראות את הבקשה לדף <a href="https://solve.pythonic.guru/comments?act=fetch&amp;fileId=111088">https://solve.pythonic.guru/comments?act=fetch&amp;fileId=111088</a>, כאשר 111088 הוא מספר הקובץ שהוגש.</p>
<p>כסיכום ביניים, אנחנו יכולים להגיד שבעת כניסה לתרגיל, המערכת פונה באמצעות בקשת GET קלאסית לדף comments בדומיין solve.pythonic.guru, שהפרמטרים שלה הם act: fetch ו־fileId: 111088.</p>
<p>תשובת השרת היא:</p>
<pre><code class="lang-json">[{"author_name":"\u05d4\u05d1\u05d5\u05d3\u05e7 \u05d4\u05d0\u05d5\u05d8\u05d5\u05de\u05d8\u05d9","author_role":2,"comment_id":1725,"file_id":111088,"id":337937,"is_auto":true,"line_number":6,"text":"\u05d9\u05d1\u05d5\u05d0\u05d9 \u05d4\u05de\u05d5\u05d3\u05d5\u05dc\u05d9\u05dd \u05e9\u05dc\u05da \u05de\u05e1\u05d5\u05d3\u05e8\u05d9\u05dd \u05dc\u05d0 \u05e0\u05db\u05d5\u05df. \u05d4\u05e7\u05e4\u05d9\u05d3\u05d5 \u05dc\u05e1\u05d3\u05e8 \u05d0\u05d5\u05ea\u05dd \u05d1\u05e1\u05d3\u05e8 \u05d0\u05dc\u05e4\u05d1\u05ea\u05d9."},{"author_name":"\u05d4\u05d1\u05d5\u05d3\u05e7 \u05d4\u05d0\u05d5\u05d8\u05d5\u05de\u05d8\u05d9","author_role":2,"comment_id":1725,"file_id":111088,"id":337938,"is_auto":true,"line_number":9,"text":"\u05d9\u05d1\u05d5\u05d0\u05d9 \u05d4\u05de\u05d5\u05d3\u05d5\u05dc\u05d9\u05dd \u05e9\u05dc\u05da \u05de\u05e1\u05d5\u05d3\u05e8\u05d9\u05dd \u05dc\u05d0 \u05e0\u05db\u05d5\u05df. \u05d4\u05e7\u05e4\u05d9\u05d3\u05d5 \u05dc\u05e1\u05d3\u05e8 \u05d0\u05d5\u05ea\u05dd \u05d1\u05e1\u05d3\u05e8 \u05d0\u05dc\u05e4\u05d1\u05ea\u05d9."},{"author_name":"\u05d4\u05d1\u05d5\u05d3\u05e7 \u05d4\u05d0\u05d5\u05d8\u05d5\u05de\u05d8\u05d9","author_role":2,"comment_id":1725,"file_id":111088,"id":337939,"is_auto":true,"line_number":12,"text":"\u05d9\u05d1\u05d5\u05d0\u05d9 \u05d4\u05de\u05d5\u05d3\u05d5\u05dc\u05d9\u05dd \u05e9\u05dc\u05da \u05de\u05e1\u05d5\u05d3\u05e8\u05d9\u05dd \u05dc\u05d0 \u05e0\u05db\u05d5\u05df. \u05d4\u05e7\u05e4\u05d9\u05d3\u05d5 \u05dc\u05e1\u05d3\u05e8 \u05d0\u05d5\u05ea\u05dd \u05d1\u05e1\u05d3\u05e8 \u05d0\u05dc\u05e4\u05d1\u05ea\u05d9."}]
</code></pre>
<p>אם אתם משתמשים בדפדפן עם כלי פיתוח מודרניים, יתכן שהוא יבחר להציג לכם את התשובה באופן נאה לעין:</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://forums.pythonic.guru/uploads/default/original/2X/2/22811143e5ec803cd071e694d953790ff6f61278.png" data-download-href="https://forums.pythonic.guru/uploads/default/22811143e5ec803cd071e694d953790ff6f61278" title="image"><img src="https://forums.pythonic.guru/uploads/default/optimized/2X/2/22811143e5ec803cd071e694d953790ff6f61278_2_495x500.png" alt="image" data-base62-sha1="4VeL6lmY1sGvVHt2OgVmO2K7ZQ4" width="495" height="500" srcset="https://forums.pythonic.guru/uploads/default/optimized/2X/2/22811143e5ec803cd071e694d953790ff6f61278_2_495x500.png, https://forums.pythonic.guru/uploads/default/optimized/2X/2/22811143e5ec803cd071e694d953790ff6f61278_2_742x750.png 1.5x, https://forums.pythonic.guru/uploads/default/optimized/2X/2/22811143e5ec803cd071e694d953790ff6f61278_2_990x1000.png 2x" data-small-upload="https://forums.pythonic.guru/uploads/default/optimized/2X/2/22811143e5ec803cd071e694d953790ff6f61278_2_10x10.png"></a></div><p></p>
<p>במערכת יש קוד JavaScript שקורא את הנתונים הללו, שהתקבלו משרת ה־Flask.<br>
לפי אותם נתונים הוא צובע את השורות הרלוונטיות ומאפשר לכם ללחוץ עליהן כדי לקבל פרטים נוספים על ההערה. את שם הבודק ואת המלל שיוצגו לכם הוא לוקח מהשדות author_name ו־text שמופיעים ב־JSON.</p>
<p>כשתשתמשו בפרויקט שלכם ב־API, כמעט כל השירותים יאפשרו לכם לקבל תשובות ב־JSON.<br>
כעת אתם יודעים מה זה הייצוג הזה, וכיצד להמיר אותו לטיפוס נתונים שאתם מכירים בפייתון.</p>
<hr>
<h2>מה זה API?</h2>
<p>המונח API הוא ראשי תיבות של Application Programming Interface.<br>
תוכנות פופולריות רבות כמו Facebook, Telegram או אפילו מערכת הפורומים שלנו, רוצות לעזור למתכנתים לכתוב עבורם הרחבות ולהשתמש באותן תוכנות לצורכיהם בקלות.</p>
<p>לשם כך אותן תוכנות כותבות עבור המתכנתים דרך נוחה וקלה לדבר איתן. לזה קוראים API.<br>
אותו API לרוב מתועד, כך שאם תרשמו Discourse API לדוגמה (זה השם של מערכת הפורומים שלנו) אתם תראו הוראות שימוש מפורטות.</p>
<p>דוגמאות ל־API:</p>
<ul>
<li>מערכת הפורומים שלנו יודעת להחזיר בצורת JSON את כל ההודעות הפרטיות שלכם, או אפילו לשנות תמונת פרופיל באמצעות ה־API.</li>
<li>ב־Telegram אפשר ליצור בוט שמתממשק עם הערוץ, מקבל את כל המידע ממנו ויודע לבצע כל פעולה שמשתמש רגיל יכול לעשות, מהזמנת משתמשים ועד להשעייתם.</li>
<li>גם ל־Facebook, Youtube, Twitter, Whatsapp ואפילו ל־Windows – יש API.</li>
</ul>
<h2>על אודות Flask</h2>
<p>המודול Flask הוא מודול מינימליסטי שמאפשר לכם להרים שרת web בסיסי באמצעות פייתון.<br>
ראו את הלייב ביום 3 ואת <a href="https://forums.pythonic.guru/t/12-3/8339/2">דוגמת הקוד</a> שמצורפת אליו כדי להבין כיצד הוא עובד ומה ניתן לעשות בעזרתו.</p>
<p>אפליקציית Flask בסיסית (תודה לוויקיפדיה):</p>
<pre><code class="lang-python">from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello World!"

if __name__ == "__main__":
    app.run(debug=True)
</code></pre>
            <p><small>6 פוסטים - 5 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/12-4-api/8349">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/12-4-api/8349</link>
          <pubDate>Sun, 18 Oct 2020 05:33:47 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8349</guid>
          <source url="https://forums.pythonic.guru/t/12-4-api/8349.rss">שבוע 12, יום 4: סִדרוּת, API</source>
        </item>
        <item>
          <title>שבוע 12, יום 3: Netlify, וגם: בקשות HTTP, מה זה API ו־REST API</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h3>מה זה Netlify?</h3>
<p>בגדול מאוד: שירות להעלאת נכסים סטטיים (תמונות, דפי HTML, CSS, JS), שמאפשר לכם להנגיש בקלות את האתר שלכם לרשת.<br>
כל מה שאתם צריכים זה לגרור את התיקייה עם הקבצים ל־Netlify, והיא תחזיר לכם כתובת לאתר שאליו אפשר לגשת מכל מקום בעולם.</p>
<p>נסו להעלות את ה־Frontend שבניתם בשיעור אחד ל־Netlify (לחצו Get Started <a href="https://www.netlify.com/">כאן</a>).</p>
<hr>
<h2>איך עובד האינטרנט? חלק 3</h2>
<ol>
<li>קראו על <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview">HTTP</a> – מה הרעיון מאחורי הפרוטוקול? כיצד הוא עובד?</li>
<li>ראו כיצד נראית <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Session">שיחה</a> בין לקוח לשרת שמתנהלת ב־HTTP.</li>
<li>כשאנחנו שולחים בקשת HTTP, אנחנו תמיד שולחים איתה את “סוג הפעולה” (method) שאנחנו רוצים לבצע. היא יכולה להיות GET, POST ועוד כמה אפשרויות שפחות ניכנס אליהן במהלך הקורס. מה זה בקשות GET ו־POST? קראו <a href="https://learn.onemonth.com/understanding-http-basics/">פה</a>. ראו וידאו על ההבדלים ביניהם <a href="https://www.youtube.com/watch?v=BcpI1hYmGj4">פה</a>.</li>
<li>קראו את הדוגמה <a href="https://www.reddit.com/r/explainlikeimfive/comments/n2jwd/eli5_http_getpost_etc/c35s5ol/?">הזו</a> שמסכמת את החומר שלמדתם עד כה.</li>
<li>קראו על <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status">קוד מצב</a> (Status code) של HTTP. כולנו מכירים את המספר 404 – שמבשר לנו שדף כלשהו לא קיים באינטרנט. אילו עוד קודים כאלו קיימים ומתי יופיעו?</li>
<li>התקינו בעזרת pip את הספרייה requests, ונסו לשלוח בעזרתה בקשת <code>get</code> לכתובת הבאה:<br>
<code>https://api.exchangeratesapi.io/history?start_at=2018-01-01&amp;end_at=2018-09-01&amp;symbols=ILS,JPY</code>. מה ה־status code שחזר? מה התוכן שחזר?</li>
<li>מה זה REST API? צפו <a href="https://www.youtube.com/watch?v=7YcW25PHnAA">כאן</a>.</li>
</ol>
<p>בלייב של היום אנסה להסביר את כל הנושאים האלו, ואתמקד בבקשותיכם להרחבה של נושאים ספציפיים.</p>
            <p><small>9 פוסטים - 5 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/12-3-netlify-http-api-rest-api/8327">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/12-3-netlify-http-api-rest-api/8327</link>
          <pubDate>Tue, 13 Oct 2020 01:47:01 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8327</guid>
          <source url="https://forums.pythonic.guru/t/12-3-netlify-http-api-rest-api/8327.rss">שבוע 12, יום 3: Netlify, וגם: בקשות HTTP, מה זה API ו־REST API</source>
        </item>
        <item>
          <title>יום 2: מונחי יסוד</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <ol>
<li>קראו באתר מוזילה: <a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_URL">מה זה URL וכיצד הוא עובד?</a>
</li>
<li>מה זה שרת אינטרנט? <a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_web_server">קראו כאן</a>.</li>
<li>מה ההבדל בין עמוד אינטרנט, אתר אינטרנט, שרת ומנוע חיפוש? <a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines">ראו כאן</a>.</li>
<li>הבסיס של <a href="https://www.youtube.com/watch?v=x3c1ih2NJEg">איך האינטרנט עובד</a> – IP, Domain, DNS. ראו גם הרחבה על DNS <a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name">כאן</a>.</li>
<li>קראו על <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview">HTTP</a>.</li>
</ol>
            <p><small>פוסט 1 - משתתף 1</small></p>
            <p><a href="https://forums.pythonic.guru/t/topic/8322">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/topic/8322</link>
          <pubDate>Mon, 12 Oct 2020 01:27:12 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8322</guid>
          <source url="https://forums.pythonic.guru/t/topic/8322.rss">יום 2: מונחי יסוד</source>
        </item>
        <item>
          <title>שבוע 12 – יום 1: האינטרנט</title>
          <dc:creator><![CDATA[Yam]]></dc:creator>
          <category>אשכולות הנהלה</category>
          <description><![CDATA[
            <h1>שבוע 12</h1>
<h2>הודעות מנהלתיות</h2>
<p>ההודעה הראשונה קצרה יחסית: מתוך מטרה להאיץ מעט את קצב הקורס ולאפשר סיום בזמן סביר יותר, אני משתדל לבנות את ההגשה כך שתקרה שבועיים ופיפס מעכשיו (עד יום ראשון בערב), ושהחומר הבא יתפרסם כבר עם תרגילי ההשלמה הבאים.</p>
<p>ההודעה השנייה מעט יותר מעניינת. צורת הלימוד השבוע מניחה שתי נקודות:</p>
<ol>
<li>שהקהילה שיש לנו פה חזקה ויודעת לתמוך אחד בשני.</li>
<li>שמי שהגיע עד כאן מספיק באמת רוצה ללמוד ולדעת את מה שיש לי ללמד.</li>
</ol>
<p>אנחנו ננסה השבוע להחליף פורמט לפורמט מבוסס פרויקטים, בו כל אחד יעשה פרויקט קטן משל עצמו ויעלה אותו ל־GitHub.<br>
אתם רשאים ואני מעודד אתכם להיעזר בחברים שלכם לקהילה, וזה אומר שאתם גם יכולים לפרסם את הקוד שלכם בפורומים. למרות שהשבוע לא אאכוף זאת, אני מעדיף מאוד ש<em>לא</em> תעתיקו קטעי קוד של אחרים. אני לא אעשה שום דבר חוץ מלהתבאס אם אראה שהעתקתם קוד השבוע, בעיקר כי לא תלמדו מזה כלום וכולנו נפסיד.<br>
(כמובן שאם החלטתם להעתיק קוד בכ"ז, אל תחסכו בקרדיט. זה הדבר הראוי, המוסרי והמקצועי לעשות).</p>
<p>במסגרת החומרים השבוע אעלה (כמעט) כל יום ל־Live כדי לענות על שאלות ולהדגים אותי כותב קוד עבור הפרויקט. תאריך ההגשה, אם כך, הוא ה־25/10.</p>
<h2>תאריכי Live</h2>
<p>השידורים החיים השבוע יתקיימו בימים ראשון, שני, שלישי וחמישי בשעות 20:00–23:00.<br>
שעות וימי השידור החי עשויים להשתנות.<br>
עדכונים לגבי התזמון והתייעצויות לגבי הפרויקטים יהיה אפשר לעשות ב<a href="https://t.me/joinchat/CfaHxBpwPvzcAOAVWmoh_Q">קבוצת טלגרם ייחודית</a> שפתחתי עבור הנושא.</p>
<h2>הקדמה</h2>
<p>בשבוע שעבר השקענו זמן רב בהכרת עולם ה־frontend לעומק.<br>
הבנו כיצד לבנות דף אינטרנט וליצוק לתוכו תוכן באמצעות HTML, ולאחר מכן למדנו לעצב אותו באמצעות CSS.<br>
למדנו על Responsive Websites ועל צורות עימוד מודרניות ופופולריות כמו flexbox ו־grid.</p>
<p>השבוע אנחנו הולכים לרענן את החומר של שבוע שעבר, ועל הדרך ליצור את הקשר עם פייתון. למעשה, השבוע אנחנו סוף סוף בונים אתר אינטרנט קצה לקצה, ומעלים אותו לאינטרנט. אפליקציה משלנו, עם ממשק משתמש והכל. איזו סגירת מעגל, הא?</p>
<h2>מה החומר של שבוע 12?</h2>
<p>החומר מסודר כך שיהיה אפשר ללמוד וליישם משהו קטן מתוך הפרויקט כל יום.<br>
יתכן שיהיו שינויים בחומר בהתאם לצורך ולפידבקים.</p>
<ol>
<li>יצירת wireframe של המוצר</li>
<li>מימוש frontend סטטי</li>
<li>שיעור: איך מורכב URL של אתר אינטרנט</li>
<li>מונחי יסוד ב־1,000 רגל: שרת, IP, HTTP, HTTPS, דומיין, DNS,Client.</li>
<li>העלאת אתר ל־Netlify – מה זה דף סטטי ואיך הוא שונה מדף דינאמי.</li>
<li>מה זה API? מה זה REST API? רישום לספק API, דוגמאות מהעולם האמיתי.</li>
<li>מה זה סריאליזציה? דוגמאות על JSON ועל pickle.</li>
<li>העברת האתר לסביבה דינאמית. דוגמה Flask. חיבור עם האתר הסטטי.</li>
<li>סביבה וירטואלית: מה זה? למה זה טוב? איך מתפעלים?</li>
<li>מה זה מנוע templating? – דוגמה Jinja2</li>
<li>העלאת אתר דינאמי ל־Heroku (הרחבה למי שרוצה: app.json, Procfile. למיטיבי לכת: AWS).</li>
<li>סיום פרויקט.</li>
</ol>
<h2>בחירת פרויקט</h2>
<p>עליכם לבחור פרויקט מינימליסטי שתרצו לממש.</p>
<p>הנה כמה אפשרויות מעניינות:</p>
<ol>
<li>אתר המלצות לפי פרמטרים: המשתמש מכניס נתונים לגבי הספר/סרט/סדרה/משחק מחשב שהוא רוצה (התמקדו בנושא אחד), ומקבל רשימה של המלצות. לדוגמה, עבור אתר המלצות לסרטים המשתמש יוכל להכניס שהוא מעוניין רק בסרטי פעולה שאורכם לא עולה על שעה.</li>
<li>אתר מוזיקה – מציאת ה־TOP 50 אמנים שמושמעים כרגע והצגתם בצורה נאה ויזואלית. המשתמש יוכל גם לבחור מדינה ספציפית שעבורה יוחזר ה־TOP 50.</li>
<li>מילון משוכלל – מילון שמאפשר למשתמש לחפש מילה, ומציג מידע מעניין אודותיה, כמו האנגרמות שלה או כמה השדה הסמנטי של המילה חיובי. (אפשר בעברית, אבל כנראה יהיה קל יותר באנגלית – כמות המשאבים שקיימים ברשת בעברית מצומצמים מאוד).</li>
</ol>
<p>תוכלו גם לחשוב על רעיון משלכם, אבל עדיף שהפרויקט יכיל:</p>
<ol>
<li>הסבר ברור על מה הרעיון מאחוריו, מה מצפים מהמשתמש להזין ומה מצופה להיות מוצג.</li>
<li>קלט מהמשתמש.</li>
<li>ממשק נאה ושמיש.</li>
</ol>
<p>ולא יכיל:</p>
<ol>
<li>שמירת נתונים מכל סוג לאורך זמן, אלא אם יש לכם ידע מוקדם במסדי נתונים וב־ORM־ים.</li>
<li>תוכן שלא תרצו לפרסם בפרוטפוליו שלכם לאחר הקורס.</li>
<li>אנחנו בתחילת הדרך. אלא אם יש לכם הרבה זמן פנוי, נסו לחשוב על משהו פשוט יחסית.</li>
</ol>
<p>אני נעזרתי ברשימת ה־API־ים <a href="https://github.com/n0shake/Public-APIs#science">הזו</a> כדי לחשוב על רעיונות.</p>
<hr>
<h2>שלב ראשון: Wireframing</h2>
<p>לפני שאנחנו באים לבנות אתר, נשרטט בקווים גסים את איך הוא יראה.<br>
פעולת השרטוט מקדימה פעמים רבות הפעולות הטכנולוגיות יותר של בניית ה־frontend, ונקראת Wireframing.<br>
שרטוט המסכים מתאר באופן כללי את העימוד של האתר, ולא נכנס לפרטי פרטים: הגופן שיופיע בתרשים יהיה אקראי למדי, התרשים יצויר בשחור לבן ויופיעו בו שומרי מקום לתמונות במקום התמונות עצמן.</p>
<p>תוכלו לראות <a href="https://www.lucidchart.com/pages/templates/wireframe/facebook-wireframe-template">כאן</a> דוגמה ל־wireframe של פיד החדשות של פייסבוק, או <a href="https://en.wikipedia.org/wiki/Website_wireframe#/media/File:Profilewireframe.png">כאן</a> דוגמה מוויקיפדיה לעמוד פרופיל גנרי.</p>
<p>אם תעבדו בעתיד עם חברות לעיצוב ממשק (UI) או לחוויית משתמש (UX), סביר שהן ישתמשו במוצרי Wireframing כדי לשלוח לכם את איך שהם מאמינים שהמוצר שלכם צריך להיראות.<br>
מתכנתי ה־frontend יקחו את השרטוטים הללו ומהם יבנו את המוצר.</p>
<p>אם כן, זה הזמן להתחיל!</p>
<ol>
<li>קחו שעה או שעתיים לחשוב על פרויקט ולבחור אותו. זה כנראה החלק היותר קשה של הפרק הזה <img src="https://forums.pythonic.guru/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">
</li>
<li>בחרו כלי Wireframing שאתם אוהבים מהרשימה למטה ושרטטו בכלליות איך יראה אתר הפרויקט שלכם. אל תיסחפו בבקשה: אמורים לצאת לכם לכל היותר 2–3 מסכים.</li>
</ol>
<h3>כלי Wireframing</h3>
<ol>
<li>משוכלל וכבד עם הרבה פיצ’רים – <a href="https://pencil.evolus.vn">Pencil</a>.</li>
<li>כלי אינטרנטי. נעים ויזואלית, פופולרי מאוד לאחרונה, מצריך קצת להתרגל אליו אבל יחסית נוח – <a href="https://www.figma.com/">Figma</a>. יש מדריכים ב־YouTube כמו <a href="https://www.youtube.com/watch?v=3q3FV65ZrUs">כאן</a>.</li>
<li>כלי ותיק, יחסית אינטואיטיבי. אתם יכולים לבחור ב־freehand כדי לקבל גרסה נוחה יחסית – <a href="https://www.invisionapp.com/home">Invision</a>.</li>
<li>צייר, gimp, photoshop או כל כלי אחר שאתם מרגישים בנוח איתו. גם נייר ועיפרון זה בסדר.</li>
</ol>
            <p><small>8 פוסטים - 5 משתתפים</small></p>
            <p><a href="https://forums.pythonic.guru/t/12-1/8312">קריאת הנושא במלואו</a></p>
          ]]></description>
          <link>https://forums.pythonic.guru/t/12-1/8312</link>
          <pubDate>Sun, 11 Oct 2020 04:15:43 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.pythonic.guru-topic-8312</guid>
          <source url="https://forums.pythonic.guru/t/12-1/8312.rss">שבוע 12 – יום 1: האינטרנט</source>
        </item>
  </channel>
</rss>
